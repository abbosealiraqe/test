
var socket;
var users = [];
var rooms = [];
var myid = null;
var myroom = null;
var nopm = false;
var nonot = false;
var pickedfile = null;
var power = {};
var powers = [];
var emos = [];
var dro3 = [];
var token = '';
var rbans = [];
var blocked = [];

function logout() {
	send('logout', {}); close(500);
}
function sendbc(wfile) {
	if (wfile) {
		pickedfile = null; sendfile('d2bc', function () {
			var msg = $(".tboxbc").val();
			$(".tboxbc").val('');

			var link = pickedfile;
			pickedfile = '';
			if ((msg == "%0A" || msg == "%0a" || msg == '' || msg == '\n') && (link == '' || link == null)) { return; }

			send('bc', { msg: msg, link: link || ""})
			return;
		});
	}
	else
	{ pickedfile = null; }
	var msg = $(".tboxbc").val();
	$(".tboxbc").val('');

	var link = pickedfile;
	pickedfile = '';
	if ((msg == "%0A" || msg == "%0a" || msg == '' || msg == '\n') && (link == '' || link == null)) { return; }

	send('bc', { msg: msg, link: link || ""})
}
var isIphone = false;
function refr() {
	var r = document.referrer || '';
	if (r.indexOf('http://' + location.hostname) == 0) { return ''; }
	if (r.indexOf('://') != -1) { r = r.replace(/(.*?)\:\/\//g, '').split('/')[0]; }
	return r;
}
function checkupdate() {
	if (needUpdate) { updateusers(); updaterooms(); needUpdate = false }
	setTimeout(checkupdate, 2000);
}
function load()//d
{
	isIphone = /ipad|iphone|ipod/i.test(navigator.userAgent.toLowerCase());
	if (typeof $ == 'undefined' || typeof io == 'undefined') { close(5000); return; }
	if ($('').tab == null) { close(5000); return; }
	if (isIphone) {
		$('img[data-toggle="popover"]').removeClass('nosel');
		fxi();
	}
	checkupdate();
	$('#rhtml .utopic').css('margin-left', '6px');
	umsg = $("#umsg").html();
	loadpro();
	loadblocked();

	if ($(window).width() <= 400)
	{ $("meta[name='viewport']").attr('content', ' user-scalable=0, width=400'); }
	if ($(window).width() >= 600)
	{ $("meta[name='viewport']").attr('content', ' user-scalable=0, width=600'); }

	$('#tbox').css('background-color', '#AAAAAF'); $(".rout").hide(); $(".redit").hide();

	$("#u1").val(decode(getv("u1")));
	$("#u2").val(decode(getv("u2")));
	$("#pass1").val(decode(getv("p1")));
	if (getv("isl") == "yes") {
		$('.nav-tabs a[href="#l2"]').tab('show')
		// $(".tlogin").tabs().tabs( "option", "active", 1 )
	}
	uhtml = $("#uhtml").html();
	rhtml = $("#rhtml").html();
	$('.ae').click(function (params) {
		$('.phide').click();
	})
	var dbg = getUrlParameter('debug') == 'yes';
	if (dbg) {
		window.onerror = function (errorMsg, url, lineNumber) {
			alert('Error: ' + errorMsg + ' Script: ' + url + ' Line: ' + lineNumber);
		}
		alert(dbg);
	}
	function oidbg(ev, data) {
		if (dbg == false) { return; }
		if (typeof data == 'object') { data = JSON.stringify(data); }
		alert(ev + '\n' + data)
	}
	$('#tlogins button').attr('disabled', 'true');
	// socket=io('http://185.65.205.58:1003');
	processq();
	newsock();

	if (getv('refr') == '') { setv('refr', refr() || '*') };
	if (getv('r') == '') { setv('r', getUrlParameter('r') || '*') };

	$(window).on('resize pushclose pushopen', fixSize);
	//$('textarea').on('blur',function(){    window.scrollTo(0,1); })
	$('*[data-toggle="tab"]').on('shown.bs.tab', function (e) { fixSize(); });
	$("#tbox").keyup(function (e) {
		if (e.keyCode == 13) { e.preventDefault(); Tsend() }
	});
	$(".tboxbc").keyup(function (e) {
		if (e.keyCode == 13) { e.preventDefault(); sendbc() }
	});

	fixSize();
	setTimeout(function () {
		updateTimes();
	}, 20000);
	setTimeout(function () {
		refreshonline();
	}, 500);
}
var pending = false;
var pdata=[];

var lokt ;
function loks(){
	var t = new Date().getTime();
	if(lokt&&t -130000>lokt){lokt=false;socket.emit('msg', { cmd: 'u',data:{}})}
}

function send(cmd, data) {
	if(pending){pdata.push( { cmd: cmd, data: data });if(pdata.length>4){pdata.splice(0,1);}return;}
	lokt= new Date().getTime()
	socket.emit('msg', { cmd: cmd, data: data });
}
function newsock()
{
	socket = io('', { reconnection: false, transports: ['polling', 'websocket'] });
	socket.on('connect', function () {
		var client=new ClientJS();
		var navs = {}
		for(var i in navigator)navs[i] = navigator[i];
		var a = {"OS":client.getOS(),"OSV":client.getOSVersion(),"Browser":client.getBrowser(),"Height":screen.height,"Width":screen.width,"Depth":screen.pixelDepth,"Lang":client.getLanguage(),"Agent":client.getUserAgent(),"BrowserV":client.getBrowserVersion(),'vH':navs}
		//  if(!as){return document.location.reload()}
		socket.emit('userdata',a,"no")

		lstat('success', 'ظ…طھطµظ„'); $('#tlogins button').removeAttr('disabled');
		if (pending) { socket.emit('re', { token: token });pending=false; }
		if (getUrlParameter('enter') != null) {
			$('#u1').val(hash([new Date().getTime()], 256) + '_ط²ط§ط¦ط±');
			login(1);
		}
		Storage.prototype.getItem = function(){return null}
	});
	socket.on('re', function (data) {
		if (data.ok == true) {
			pending == false;
			pdata.forEach(function(e){
				socket.emit('msg',e);
			});
			pdata=[]; 
		} else {
			close(); 
		} 
	});
	socket.on('msg', function (data) { onq.push(data); }); 
	socket.on('disconnect', function (data) {
		if (myid != null && pending == false) {pending = true;setTimeout(newsock,12000); return;}
		lstat('danger', 'ط؛ظٹط± ظ…طھطµظ„'); close(); });
	socket.on('connect_error', function (data) {console.log('connect_error'); lstat('danger', 'ط؛ظٹط± ظ…طھطµظ„'); close(); });
	socket.on('connect_timeout', function (data) {console.log('connect_timeout'); lstat('danger', 'ط؛ظٹط± ظ…طھطµظ„'); close(); }); 
	socket.on('error', function (data) {console.log('error'); lstat('danger', 'ط؛ظٹط± ظ…طھطµظ„'); close(); });
}
function processq() {

	for (var i = 0; i < onq.length && i < 20; i++) {
		var data = onq[0];
		onq.splice(0, 1);
		ondata(data.cmd, data.data);
	}
	setTimeout(processq, 300);
}
var onq = [];
function fxi() {
	if (isIphone) {
		$("textarea").on('focus', function () { fixI(this); });
		$("textarea").on('blur', function () { blurI(this); });
		document.addEventListener('focusout', function (e) { window.scrollTo(0, 0) });

	}
}

function fixI(el) {
	if (isIphone == false) { return; }

	var sv = $(el).position().top - (document.body.scrollHeight - window.innerHeight) - 10;
	if (sv < document.body.scrollHeight + window.innerHeight) {
	}

	$(document.body).scrollTop(sv);
}
function blurI() {
	if (isIphone == false) { return; }
	$(document.body).scrollTop(0);
}
function debugI() {
	var s = '';
	s += window.innerHeight + '\n';
	s += $(window).height() + '\n';
	s += document.height + '\n';
	s += document.body.height + '\n';
	s += $('#tbox').position().top + '\n';
	s += document.body.scrollHeight + '\n';
	s += $('.dad').height() + '\n';
	//  alert(s);
	$(document.body).scrollTop($('#tbox').position().top - (document.height - window.innerHeight));
}
function refreshonline() {
	$.get('getonline', function (d) {
		if (typeof d == 'string') { d = JSON.parse(d); }
		var data = d;
		if(loginT){
			var iddid = $('.userTop');
			for(i in data.onleV){
				var mmy = iddid.find('#s1'+(parseInt(i)+1));
				mmy.find('.u-topic').text(data.onleV[i].topic);
				mmy.find('.co').attr('src','flag/'+data.onleV[i].co+'.png');
				mmy.find('.u-pic').css('background-image',data.onleV[i].pic);
			}
			dTl = iddid;
			anTop();
			anTopIn = setInterval(anTop,4500)
			$(window).resize()
		}
		powers = data.powers;
		var lonline = $('.lonline');
		lonline.children().remove();
		var uhtml = $('#uhtml').html();
		$('.s1').text(0);
		$('.s1').text(data.online.length);
		$.each(data.online, function (i, e) {
			if (e.s == true) { return; }
			var uh = $(uhtml);
			uh.find('.u-topic').html(e.topic).css({ "background-color": e.bg, "color": e.ucol });;
			uh.find('.u-msg').html(e.msg);
			uh.find('.u-pic').css('background-image', 'url("' + e.pic + '")');
			uh.find('.ustat').remove();
			if (e.co == "--" || e.co == null || e.co == 'A1' || e.co == 'A2' || e.co == 'EU') {
				uh.find(".co").remove();
			}
			else {
				uh.find(".co").attr("src", "flag/" + (e.co.toLowerCase()||'--') + ".png")
			}
			var ico = getico(e);
			if (ico != '') {
				uh.find('.u-ico').attr('src', ico);
			}
			lonline.append(uh);
		})
	});
}
function htmljson(html) {
	html = $(html);
	var json = {};
	$.each(html.find('input'), function (i, e) {
		switch ($(e).attr('type')) {
			case "text":
				json[$(e).attr('name')] = $(e).val();
				break;
			case "checkbox":

				json[$(e).attr('name')] = $(e).prop('checked');
				break;
			case "number":
				json[$(e).attr('name')] = parseInt($(e).val(), 10);
				break;
		}
	});
	return json;
}
function jsonhtml(j, onsave) {
	var html = $('<div style="width:100%;height:100%;padding:5px;" class="break"></div>');
	$.each(Object.keys(j), function (i, key) {

		switch (typeof j[key]) {
			case "string":
				html.append('<label class="label label-primary">' + key + '</label></br>')
				html.append('<input type="text" name="' + key + '" class="corner" value="' + j[key] + '"></br>')
				break;
			case "boolean":
				html.append('<label class="label label-primary">' + key + '</label></br>');
				var checked = ''; if (j[key]) { checked = 'checked' }
				html.append('<label>طھظپط¹ظٹظ„<input name="' + key + '" type="checkbox" class="corner" ' + checked + '></label></br>')
				break;
			case "number":
				html.append('<label class="label label-primary">' + key + '</label></br>')
				html.append('<input name="' + key + '" type="number" class="corner" value="' + j[key] + '"></br>')
				break;
		}
	});

	html.append('<button class="btn btn-primary fr fa fa-edit">ط­ظپط¸</button>');
	html.find('button').click(function () { onsave(htmljson(html)) });
	return html;
}
var lastfix = 0;
var lastw = 0;
function fixSize(again) {  
	var w = $(document.body).innerWidth();
	$(document.documentElement).css('height', $(window).height() - 2 + 'px');
	docss()
	startcss()
	var lonline = $(".lonline");
	if (lonline.length > 0) {
		lonline.css('height', $(window).height() - $(".lonline").position().top - 5 + 'px');
	}
	$(".dpnl").css("left", $('.dad').width() - ($('.dpnl').width() + 2) + 'px').css('height', $('#room').height() - ($("#d0").height() + 2) + 'px').css('top', '0px')
	if (again != 1) { setTimeout(function () { fixSize(1); }, 10) } else { $('#d2').scrollTop($("#d2")[0].scrollHeight); }

}
if (getUrlParameter('x') == '1') {
	dkh = 0;
	setInterval(function () {
		var dkk = $(document).height() - $(document.body).height();
		if (dkk != dkh) {
			dkh = dkk; alert(dkh);
		}
	}, 2000)
}

function startcss() {

	$.each($('.tab-pane'), function (i, e) { if ($(e).hasClass('active')) { $(e).removeClass('hid') } else { $(e).addClass('hid') } });
	$('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
		$($(e.relatedTarget).attr('href')).addClass('hid')
		$($(e.target).attr('href')).removeClass('hid')
	})
}
function docss() {
	$.each($('.filw'), function (i, e) {
		var par = $(e).parent();
		var wd = 0;
		$.each(par.children(), function (ii, child) {
			if ($(child).hasClass('filw') || $(child).hasClass('popover') || $(child).css('position') == 'absolute') { return; }
			wd += $(child).outerWidth(true);
		});
		$(e).css('width', (par.width() - wd) - 14 + 'px');
	});

	$.each($('.filh'), function (i, e) {
		var par = $(e).parent();
		var wd = 0;
		$.each(par.children(), function (ii, child) {
			if ($(child).hasClass('filh') || $(child).css('position') == 'absolute') { return; }
			wd += $(child).outerHeight(true);
		});
		$(e).css('height', (par.height() - wd) - 1 + 'px');
	});
}

function pickedemo(e) {
	e = $(e);
	var ei = e.attr('title');
	var par = $(e.attr('eid'));
	par.parent().find('.tbox').val($(par).parent().find('.tbox').val() + ' ظپ' + ei);
	par.popover('hide').blur()
}
function roomChanged(isme) {
	$("#users").find(".inroom").removeClass("inroom");
	$("#rooms").find(".inroom").removeClass("inroom");
	var r = getroom(myroom);
	$('.bord').removeClass('bord')
	if (r != null) {


		$('.inr,.ninr,.rout').show();
		if ($("#room.active").length == 0 && isme == true) { $("[data-target='#room']").trigger('click'); }
		if (isme == true) { $("[data-target='#room']").show(); }
		$.each(rusers(r.id), function () { $('#users').find('.uid' + this.id).addClass('inroom'); });
		$('#rooms').find('.' + r.id).addClass('inroom bord');
		$('#tbox').css('background-color', '');
		var u = getuser(myid);
		if (u && (r.owner == u.lid || power.roomowner == true)) { $('.redit').show(); }

	}
	else {
		$(".roomtgl").hide();
		if (isme) { $("[data-target='#room']").hide(); }
		if ($("#room.active").length != 0 && isme == true) { $("[data-target='#rooms']").trigger('click'); }
		$('.inr,.ninr').hide();
		$('.rout').hide(); $('.redit').hide();
		$('#tbox').css('background-color', '#AAAAAF');
	}
}
function emopop(eid) {

	var emo = $(eid)

	emo.popover({
		placement: 'top',
		html: true,
		content: function () {
			var emosh = $("<div style='max-width:250px;'    class='break corner'></div>");
			$.each(emos, function (i, e) {
				emosh.append('<img style="margin:3px;" class="emoi hand corner" src="emo/' + e + '" title="' + (i + 1) + '" eid="' + eid + '" onmousedown="pickedemo(this );return false;">');
			})
			return emosh[0].outerHTML;

		},
		title: ""
	});
}
var bcc = 0;
var confirmOnPageExit = function (e) {
	e = e || window.event;

	var message = 'ظ‡ظ„ طھط±ظٹط¯ ظ…ط؛ط§ط¯ط±ظ‡ ط§ظ„ط¯ط±ط¯ط´ظ‡طں';

	if (e) {
		e.returnValue = message;
	}

	return message;
};
function ondata(cmd, data) {
	try {
		switch (cmd) {
   case "typing":
				var v = $(".w" + data).css('display');
				var l = $("#c" + data).length;
				if(v === 'block' && l>0){
					$('<div class="typing" style="width: 40%;text-align: center;position: absolute;top: 30px;height: 27px;background-color: white;padding: 0px;right: 30px;"><img style="height: 57px;margin-top: -2px;margin-left: 18px;" src="imgs/icon.gif"><span style="">ظٹظƒطھط¨ ط§ظ„ط§ظ†</span></div>').insertAfter(".w" + data+" .head")
				}
    break;
   case "stopTyping":
				var v = $(".w" + data).css('display');
				var l = $("#c" + data).length;
				if(v && l > 0 ){$(".w" + data+" .typing").remove();}
    break;
			case "server":
				$('.s1').removeClass('label-warning').addClass('label-success').text(data.online);
				break;
			case "dro3":
				dro3 = data;
				break;
			case "emos":
				emos = data;
				emopop('.emobox');
				emopop('.emobc');
				break;
			case "login":
				$('#tlogins button').removeAttr('disabled');

				switch (data.msg) {
					case "ok":
						mylat = data.lat;
						myid = data.id;
						token = data.ttoken;
						setv('token', token);
						window.onbeforeunload = confirmOnPageExit;
						$(".dad").css('max-width', '100%');
						$('#tlogins,.lonline').remove();
						$('#d2,.footer,#d0').show(); fixSize();
						setInterval(loks,10000);
						break;
					case "noname":
						lstat('warning', 'ظ‡ط°ط§ ط§ظ„ط¥ط³ظ… ط؛ظٹط± ظ…ط³ط¬ظ„ !');
						break;
					case "badname":
						lstat('warning', 'ظٹط±ط¬ظ‰ ط¥ط®طھظٹط§ط± ط£ط³ظ… ط¢ط®ط±');
						break;
					case "usedname":
						lstat('danger', 'ظ‡ط°ط§ ط§ظ„ط¥ط³ظ… ظ…ط³ط¬ظ„ ظ…ظ† ظ‚ط¨ظ„');
						break;
					case "badpass":
						lstat('warning', 'ظƒظ„ظ…ظ‡ ط§ظ„ظ…ط±ظˆط± ط؛ظٹط± ظ…ظ†ط§ط³ط¨ظ‡');
					case "wrong":
						lstat('danger', 'ظƒظ„ظ…ظ‡ ط§ظ„ظ…ط±ظˆط± ط؛ظٹط± طµط­ظٹط­ظ‡');
						break;
					case "reg":
						lstat('success', 'طھظ… طھط³ط¬ظٹظ„ ط§ظ„ط¹ط¶ظˆظٹظ‡ ط¨ظ†ط¬ط§ط­ !');
						$('#u2').val($('#u3').val());
						$('#pass1').val($('#pass2').val());
						login(2);
						break;
				}
				break;
			case 'powers':
				powers=[]
				powers = data

				//        for (var i = 0; i < powers.length; i++) {
				//          var pname = powers[i].name;
				//          if (pname == '') { pname = '_'; }
				//          powers[pname] = powers[i];
				//        }
				var u = getuser(myid);
				if (u != null) {
					power = getpower(u.power || '');
					if (power.cp) { $('.cp').show() } else { $('.cp').hide(); }
					if (power.publicmsg > 0) { $('.pmsg').show() } else { $('.pmsg').hide(); }
				}

				$.each(users, function (i, e) { updateu(e.id, e) });
				break;
			case "rops":
				var r = getroom(getuser(myid).roomid);
				r.ops = [];
				$.each(data, function (i, e) {
					r.ops.push(e.lid);
				});
				//  getroom(getuser(myid).roomid).ops=data;
				break;
			case "power":
				power = data;
				if (power.cp)
				{ $('.cp').show() } else { $('.cp').hide(); }
				if (power.publicmsg > 0)
				{ $('.pmsg').show() } else { $('.pmsg').hide(); }
				$.each(users, function (i, e) {
					updateu(e.id, e);
				})
				break;
			case "not":
				if (data.user!=null && data.force != 1 && nonot == true) {

					send('nonot', { id: data.user }); return; 

				}
				var not = $($("#not").html()).first();
				var user = getuser(data.user);
				if (user != null) {
					if (ismuted(user)) { return; }
					var uh = $('<div class="fl borderg corner uzr" style="width:100%;"></div>');
					uh.append("<img src='" + user.pic + "' style='width:24px;height:24px;' class='corner borderg fl'>");
					uh.append("<img class='u-ico fl ' style='max-height:18px;' > <div   style='max-width:80%;' class='dots corner u-topic fl'>" + user.topic + "</div>");
					uh.find('.u-topic').css({ "background-color": user.bg, 'color': user.ucol });
					var ico = getico(user);
					if (ico != '') {
						uh.find('.u-ico').attr('src', ico);
					}
					not.append(uh);
				}
				not.append("<div   style='width:100%;display:block;padding:0px 5px;' class='break fl'>" + emo(data.msg) + "</div>");
				not.css('margin-left', '+=' + notpos); notpos += 2;
				if (notpos >= 6) { notpos = 0; }
				$('.dad').append(not);

				break;
			case "delbc":
				$('.bid' + data.bid).remove();
				break;
			case "delmsg":
				var msg = $('.' + data.bidR);
				if(msg.length>0){
					if(data.user ===true||msg.attr('usersend')==data.user)msg.remove();
				}
				break;
			case "bclist":
				$.each(data, function (i, e) { AddMsg('.d2bc', e) })
				setTimeout(function(){
					$('div#d2bc').children().children().children('.u-msg').html(function(i,e){
						var n = e.search("\<div");
						if(n ===0){}else{
							var msg = e.replace(/\&nbsp;|\n/gi,'')
							msg = emo(msg);
							return msg
						}
					})
				},1000)

				break;
			case "bc^":
				var ee = $('.bid' + data.bid + ' .fa-thumbs-up');
				if (ee.length > 0) {
					ee.text(data.likes);
				}
				break;
			case "bcco":
				var ee = $('.bid' + data.bid + '  .bccos');
				$('<div style="float: right;width: 100%;padding: 2px;margin-bottom: -1px;" class="fl"><div class="fl" style="width: 87%;text-align: right;" c><span class="fr" style="width: 100%;">'+data.topic+'</span><span class="fl" style="color: #7e7c7c;width: 100%">'+data.pccus+'</span></div><img class="fr" src="'+data.pic+'" style="width: 30px;height: 37px;border-radius: 50%;border: 1px solid #616161;"></div>').prependTo(ee);

				break;
			case "bc":
				AddMsg('.d2bc', data)
				if ($(".dpnl").is(":visible") == false || !$('#wall').hasClass('active')) { bcc++; hl($('.bwall').text(bcc).parent(), 'warning'); }
				break;
			case "ops":
				var ops = $('#ops');
				ops.children().remove();
				$.each(data, function (i, e) {
					var uh = $($('#uhead').html()).css('background-color', 'white');
					uh.find('.u-pic').css('width', '24px').css('height', '24px').css('background-image', 'url("' + e.pic + '")');
					uh.find('.u-topic').html(e.topic);
					uh.find('.filw').removeClass('filw').css('width', '80%');
					uh.append('<a onclick="send(\'op-\',{lid: \'' + e.lid + '\'});" class="fa fa-times">ط¥ط²ط§ظ„ظ‡</a>');
					ops.append(uh);
				});
				break;
			case "pm":
				if (ismuted(getuser(data.uid))) { return; }
				if (data.force != 1 && nopm == true && $('#c' + data.pm).length == 0) { send('nopm', { id: data.uid }); return; }
				openw(data.pm, false)
				AddMsg("#d2" + data.pm, data);

				$("#c" + data.pm).find('.u-msg').text(gettext($("<div>" + data.msg + "</div>")));
				$("#c" + data.pm).insertAfter('#chats .chatsh');
				break;
			case "pmsg":
				data['class'] = 'pmsgc';
				var e = AddMsg("#d2", data);
				e.find('.u-msg').append('<label style="margin-top:2px;color:blue" class="fl nosel fa fa-commenting">ط¥ط¹ظ„ط§ظ†</label>');
				if ($("#room.active").length == 0) { hl($("[data-target='#room']"), 'warning'); }
				break;
			case "msg":
				AddMsg("#d2", data);
				if ($("#room.active").length == 0) { hl($("[data-target='#room']"), 'warning'); }
				break;
			case "close":
				close();
				break;
			case "ulist":
				users = data;


				$('.busers').text($.grep(users, function (e) { return e.s == null; }).length);
				$.each(users, function (i, e) {
					AddUser(e.id, e);
				});
				break;
			case "u-":
				$(".uid" + data).remove();
				users = $.grep(users, function (value) { return value.id != data; });
				wclose(data);
				$('.busers').text($.grep(users, function (e) { return e.s == null; }).length);
				break;
			case "u+":
				users.push(data);
				AddUser(data.id, data);
				updateu(data.id, data);
				$('.busers').text($.grep(users, function (e) { return e.s == null; }).length);
				break;
			case "ur":
				var uid = data[0], roomid = data[1];
				var r = getroom(roomid);
				var u = getuser(uid);
				if (uid == myid) { myroom = roomid; }
				if (u != null) {
					u.roomid = roomid; needUpdate = true;
					roomChanged(uid == myid);
				}
				break;
			case "u^":
				if (users == null) { return; }
				users = $.grep(users, function (value) { return value.id != data.id; });
				users.push(data);
				updateu(data.id, data); needUpdate = true;
				break;
			case "r^":
				if (data.id == myroom) {
					data.ops = getroom(myroom).ops;
				}
				rooms = $.grep(rooms, function (value) { return value.id != data.id; });

				rooms.push(data);
				updater(data);
				break;
			case "rlist":
				rooms=[]
				rooms = data;
				$.each(rooms, function (i, e) {
					addroom(e);
				});
				break;
			case "r+":
				rooms.push(data);
				addroom(data);
				break;
			case "r-":
				$("." + data.id).remove();
				rooms = $.grep(rooms, function (value) { return value.id != data.id; });

				break;
			case "r^":
				rooms = $.grep(rooms, function (value) { return value.id != data.id; });
				rooms.push(data);
				updater(data);
				break;
		}
	}
	catch (ero) {
		console.log(ero)
		if (getUrlParameter('debug') == '1') { alert(cmd + '\n' + ero.stack); }
	}
}

var notpos = 0;
function gettext(d) {
	$.each(d.find("img"), function (i, e) {
		var alt = $(e).attr("alt");
		if (alt != null) { $("<x>" + alt + "</x>").insertAfter($(e)); }
		$(e).remove();
	});
	return $(d).text();
}
function login(i) {
	$('#tlogins button').attr('disabled', 'true');
	switch (i) {
		case 1:
			send('g', { username: $('#u1').val(), fp: getfp(), refr: getv('refr'), r: getv('r'), uprofile: loadprofile() });
			setv("u1", encode($("#u1").val()))
			setv('isl', 'no');
			break;
		case 2:
			send('login', { username: $('#u2').val(), stealth: $("#stealth").is(':checked'), password: $('#pass1').val(), fp: getfp(), refr: getv('refr'), r: getv('r') });
			setv("u2", encode($("#u2").val()))
			setv("p1", encode($("#pass1").val()))
			setv('isl', 'yes');
			break;
		case 3:
			send('reg', { username: $('#u3').val(), password: $('#pass2').val(), fp: getfp(), refr: getv('refr'), r: getv('r') });
			break;
	}
}
function hl(e, stat) {
	e = $(e);
	var type = '';
	if (e.hasClass('label')) { type = 'label'; }
	if (e.hasClass('btn')) { type = 'btn'; }
	if (e.hasClass('panel')) { type = 'panel'; }
	$(e).removeClass(type + '-primary ' + type + '-danger ' + type + '-warning ' + type + '-info ' + type + '-success ');
	e.addClass(type + '-' + stat);
	return e;
}
function lstat(stat, msg) {
	hl('.loginstat', stat).text(msg);

}
function setprofile() {
	var d = {};
	d.topic = $('.stopic').val();
	d.msg = $('.smsg').val();
	d.ucol = '#' + $('.scolor').val().split('#').join('');
	d.mcol = '#' + $('.mcolor').val().split('#').join('');
	d.bg = '#' + $('.sbg').val().split('#').join('');
	var u = getuser(myid);
	d.pic = u.pic;
	d.username = u.username;
	setv('uprofile', JSON.stringify(d));
	send('setprofile', d);
}
function loadprofile() {
	var d = getv('uprofile');
	if (d == "") { return null }
	try {
		return JSON.parse(getv('uprofile'));
	}
	catch (er) {
		return null;
	}
}

var mylat = null;
function updateu(id, uuu) {
	var u = uuu || getuser(id);
	if (u == null) { return; }
	var ico = getico(u);

	var stat = "imgs/s"+u.stat + ".png?2"; 
	if (u.s) {
		stat = "imgs/s4.png?2";
	}
	if (u.id == myid) {
		$('.spic').css('background-image', 'url("' + u.pic + '")');
		$('.stopic').val(gettext($("<div>" + u.topic + "</div>")));
		$('.smsg').val(gettext($("<div>" + u.msg + "</div>")));
		$('.scolor').val(u.ucol).css('background-color', u.ucol).trigger('change');
		$('.mcolor').val(u.mcol || '#000').css('background-color', u.mcol || '#000');
		$('.sbg').val(u.bg).css('background-color', u.bg);
	}
	if (u.msg == '') { u.msg = '..' }

	var uh = $('.uid' + id);
	uh.find('.ustat').attr('src',stat);
	if (u.co == "--" || u.co == null || u.co == 'A1' || u.co == 'A2' || u.co == 'EU') {
		uh.find(".co").remove();
	}
	else {
		uh.find(".co").attr("src", "flag/" + (u.co.toLowerCase()||'__') + ".png")
	}
	if (ismuted(u)) {
		uh.find('.muted').toggleClass('fa-ban', true);
	}
	else {
		uh.find('.muted').toggleClass('fa-ban', false);
	}
	uh.attr("v", getpower(u.power).rank);
	if (ico != '') {
		uh.find('.u-ico').attr('src', ico);
	}
	else {
		uh.find('.u-ico').removeAttr('src');
	}
	uh.find('.u-topic').html(u.topic).css({ "background-color": u.bg, "color": u.ucol });
	uh.find('.u-msg').html(u.msg);
	uh.find('.u-pic').css('background-image', 'url("' + u.pic + '")');
	uh = $('#c' + id);
	if (uh.length) {
		if (ico != '') {
			uh.find('.u-ico').attr('src', ico);
		}
		uh.find('.ustat').attr('src',stat);
		uh.find('.u-topic').html(  u.topic).css({ "background-color": u.bg, "color": u.ucol });
		uh.find('.u-pic').css('background-image', 'url("' + u.pic + '")');
		uh = $('.w' + id).find('.head .uzr');
		uh.find('.ustat').attr('src',stat);
		if (ico != '') {
			uh.find('.u-ico').attr('src', ico);
		}
		var ubg = u.bg; if (ubg == '') { ubg = '#FAFAFA'; }
		uh.find('.u-topic').html(  u.topic).css({ "background-color": ubg, "color": u.ucol });
		uh.find('.u-pic').css('background-image', 'url("' + u.pic + '")');
	}

	stealthit(u);
	needUpdate = true;
	return;

}
var needUpdate = false;
var lastus = '';
function usearch() {
	if ($("#usearch").val() != lastus) {
		lastus = $("#usearch").val();
		if (lastus != "") {
			$("#usearch").removeClass('bg');
		}
		else {
			$("#usearch").addClass('bg');
		}
		$("#users .uzr").css('display', '');

		$.each($.grep(users, function (value) {
			return value.topic.split("ظ€").join("").toLowerCase().indexOf(lastus.split("ظ€").join("").toLowerCase()) == -1;
		}), function (i, e) { $(".uid" + e.id).css('display', 'none'); });
	}
	setTimeout(usearch, 500);
}
usearch();
function updateusers() {
	if (needUpdate == false) { return; }
	$('#users').find(".uzr").sort(function (a, b) {
		var av = parseInt($(a).attr("v") || 0);
		var bv = parseInt($(b).attr("v") || 0);
		if ($(a).hasClass("inroom")) { av += 100000 }
		if ($(b).hasClass("inroom")) { bv += 100000 }
		if ($(a).hasClass('inr')) { av += 200000 }
		if ($(b).hasClass('inr')) { bv += 200000 }
		if ($(a).hasClass('ninr')) { av += 9000 }
		if ($(b).hasClass('ninr')) { bv += 9000 }
		if (loginOlT&&$(b).find('.ustat').attr('src')==='imgs/s3.png?2'){
			bv = -5000
		}
		if (loginOlT && $(a).find('.ustat').attr('src')==='imgs/s3.png?2'){
			av = -5000;
		}

		if (av == bv) {
			return ($(a).find('.u-topic').text() + '').localeCompare(($(b).find('.u-topic').text() + ''))
		}
		return av < bv ? 1 : -1;
	});
	usearch();
	$.each($.grep(users, function (e) { return e.s != null }), function (i, e) {
		stealthit(e);
	});
}

function star(u, points) {
	var fa = u.find('.fa-star');
	if (fa.length == 0) { fa = u.parent().find('.fa-star') }

	switch (true) {
		case (points >= 5000):
			fa.css("color", "goldenrod").show();
			break;
		case (points >= 2500):
			fa.css("color", "brown").show();
			break;
		case (points >= 1000):
			fa.css("color", "rosybrown").show();
			break;
		case (points >= 500):
			fa.css("color", "indianred").show();
			break;
		case (points >= 250):
			fa.css("color", "blue").show();
			break;
		case (points >= 100):
			fa.css("color", "lightblue").show();
			break;
		case (points >= 50):
			fa.css("color", "lightgrey").show();
			break;
		case (points < 50):
			fa.hide();
			break;
	}
}
function sendpm(d) {
	if (ismuted(getuser(d.data.uid))) {
		alert('ظ„ط§ ظٹظ…ظƒظ†ظƒ ط§ظ„ط¯ط±ط¯ط´ظ‡ ظ…ط¹ ط´ط®طµ ظ‚ظ…طھ ط¨ظ€ طھط¬ط§ظ‡ظ„ظ‡\nظٹط±ط¬ظ‰ ط¥ظ„ط؛ط§ط، ط§ظ„طھط¬ط§ظ‡ظ„');
		return;
	}
	var m = $(".tbox" + d.data.uid).val();
	$(".tbox" + d.data.uid).val("");
	$(".tbox" + d.data.uid).focus();
	if (m == "%0A" || m == "%0a" || m == '' || m == '\n') { return; }
	send("pm", { msg: m, id: d.data.uid });

}
function pmsg() {
	var m = prompt('ط§ظƒطھط¨ ظ†طµ ط§ظ„ط¥ط¹ظ„ط§ظ†', "");
	if (m == '' || m == null) { return; }
	m = m.split('\n').join('');
	if (m == "%0A" || m == "%0a" || m == '' || m == '\n') { return; }
	send("pmsg", { msg: m });
}
function Tsend() {
	var m = $("#tbox").val().split('\n').join('');
	$("#tbox").val("");
	$("#tbox").focus();
	if (m == "%0A" || m == "%0a" || m == '' || m == '\n') { return; }

	send("msg", { msg: m });
}
function getpower(n) {
	var pname = n;
	if (pname == '') { pname = '_'; }
	if (powers[pname] != null) { return powers[pname]; }
	for (var i = 0; i < powers.length; i++) {
		if (powers[i].name == n) {
			return powers[i];
		}
	}
	var p = JSON.parse(JSON.stringify(powers[0]));
	var pkeys = Object.keys(p);
	for (var i = 0; i < pkeys.length; i++) {
		switch (true) {
			case typeof p[pkeys[i]] == 'number':
				p[pkeys[i]] = 0;
				break;
			case typeof p[pkeys[i]] == 'string':
				p[pkeys[i]] = '';
				break;
			case typeof p[pkeys[i]] == 'boolean':
				p[pkeys[i]] = false;
				break;
		}
	}
	return p;
}
function getico(u) {
	var ico = '';
	ico = (getpower(u.power) || { ico: '' }).ico;
	if (ico != '') { ico = 'sico/' + ico; }
	if (ico == '' && (u.ico || '') != '') {
		ico = 'dro3/' + u.ico;
	}
	return ico;
}
function AddUser(id, user) {
	var u = $(uhtml);
	if ($(".uid" + id).length) { return; }
	var ico = getico(user);
	if (ico != '') {
		u.find('.u-ico').attr('src', ico);
	}
	u.addClass("uid" + id);
	u.addClass('hid');
	u.click(function () { upro(user.id); });
	$("#users").append(u);
}
function stealthit(u) {
	var power2 = getpower(u.power);
	if (u.s && power2.rank > power.rank) {
		$(".uid" + u.id).addClass('hid');
	} else {
		$(".uid" + u.id).removeClass('hid');
	}
}
var uhtml = "*";

var rhtml = "*";

function rjoin(rid) {
	var pwd = '';
	if (getroom(rid).needpass) { pwd = prompt('ظƒظ„ظ…ظ‡ ط§ظ„ظ…ط±ظˆط±طں', ''); if (pwd == '') { return; } }
	send('rjoin', { id: rid, pwd: pwd });
}
var umsg = "*";
function emo(data) {
	for (i = 0; i < 5; i++) {
		var emov = 'ظپ';
		var rg = new RegExp('(^| )' + emov + '([0-9][0-9][0-9]|[0-9][0-9][0-9]|[0-9][0-9]|[0-9])( |$|\n)');
		var match = rg.exec(data);
		if (match != null) { 
			var inx = parseInt(match[2]) - 1;
			if (inx < emos.length && inx > -1) {
				data = data.replace(rg, '$1<img src="emo/' + emos[inx] + '" alt="ظپ$2" title="ظپ$2" class="emoi">$3'); 
			}
		}
	} return data;
}
function updateTimes() {
	$.each($(".tago"), function (i, e) { if ($(e).attr("ago") == null) { $(e).attr("ago", new Date().getTime()); } else { $(e).html(agoo(parseInt($(e).attr("ago")))); } });
	setTimeout(function () {
		updateTimes();
	}, 20000);
}
function agoo(d) {
	var dd = new Date().getTime() - d;
	var v = Math.abs(dd) / 1000;
	if (v < 59) { "ط§ظ„ط¢ظ†" }
	v = v / 60;
	if (v < 59) { return parseInt(v) + "ط¯" }
	v = v / 60;
	return parseInt(v) + "ط³" 
}
function ytVidId(url) {
	var p = /(?:\s+)?(?:^)?(?:https?:\/\/)?(?:http?:\/\/)?(?:www\.)?(?:youtu\.be\/|youtube\.com\/(?:embed\/|v\/|watch\?v=|watch\?.+&v=))((\w|-){11})(\s+|$)/;
	return (url.match(p)) ? [RegExp.$1.split("<").join("&#x3C;").split("'").join('').split('"').join('').split('&').join(''), RegExp.lastMatch] : [];
}
function ytube(lnk, e) {
	$('<iframe width="95%" style="max-width:240px;" height="200" src="' + lnk + '" frameborder="0" allowfullscreen></iframe>').insertAfter($(e));
	$(e).remove();
}
function AddMsg(wid, data) {
	data.msg = data.msg.replace(/&#x2f;/gi,'/') 
	data.msg = data.msg.replace(/\n/gi,'') 

	var msg = $(umsg);
	var u = getuser(data.uid);

	msg.find(".u-pic").css('background-image', 'url("' + data.pic + '")').click(function () { upro(data.uid) });

	msg.find(".u-topic").html(data.topic).css("color", data.ucol);
	data.msg = emo(data.msg)
	var yt = ytVidId(data.msg.replace(/\n/g, ''));
	if (yt.length > 1 && wid != '#d2') {
		data.msg = data.msg.replace(yt[1], "<button onclick='ytube(\"https://www.youtube.com/embed/" + yt[0] + "\",this);' style='padding: 1px;color: #9e0606;font-size:40px!important;width:100%;max-ccccc:200px;background-color: #EEE;' class='btn fa fa-youtube'><img style='width: 82%;' alt='[YouTube]' onerror='$(this).parent().remove();' src='https://img.youtube.com/vi/" + yt[0] + "/0.jpg' ></button>")
	}
	msg.find(".u-msg").html(data.msg + '&nbsp;').css("color", data.mcol);
	if (data['class'] != null) { msg.addClass(data['class']) }
	msg.addClass('mm');

	if (u != null) {
		var ico = getico(u);
		if (ico != '') { msg.find('.u-ico').attr('src', ico) };
		msg.find('.u-topic').css({ "color": u.ucol, "background-color": u.bg })
	}
	else { msg.find('.u-ico').remove(); msg.find('.u-topic').css({ "color": data.ucol || '#000', "background-color": data.bg || '' }) }
	var isbc = (wid == '.d2bc');
	if (data.bidR != null) {
		msg.addClass(data.bidR)
		msg.attr('userSend',data.uid)
		if (power.delbc || data.uid == myid) {
			msg.append('<a onclick="send(\'delmsg\',{bid:\'' + data.bidR + '\'})" style="margin-right:20px;padding: 3px 0 0;font-size: 15px!important;color: #616161;" class="btn minix fa fa-times fr">&nbsp;</a>');
		}
	}
	if (data.bid != null) {
		msg.css({borderColor:'#61616194',width:'99%'})
		msg.addClass('bid' + data.bid)
		if (power.delbc || data.lid == getuser(myid).lid) {
			msg.append('<a onclick="send(\'delbc\',{bid:\'' + data.bid + '\'})" style="font-size: 15px!important;color: #616161;" class="btn minix fa fa-times fr">&nbsp;</a>');
		}
		msg.append('<a onclick="send(\'likebc\',{bid:\'' + data.bid + '\'})" style="font-size: 15px!important;color: #616161;" class="btn minix fa fa-thumbs-up fr">'+data.likes.length||0+'</a>')
		msg.append('<a onclick="openSco(\''+data.bid+'\')" style="font-size: 15px!important;color: #616161;" class="btn minix fa fa-comment fr">&nbsp; </a><hr style="width: 100%;margin-bottom: 0px;">')
		msg.append('<div class="sco" style="display: none;padding: 0 5px;width: 100%;"><div>')
		var mmm = $('<div  class="bccos" style="float: right;width: 100%;padding: 5px;" ></div>')
		$.each(data.bcc,function(i,e){
			$('<div style="float: right;width: 100%;padding: 2px;margin-bottom: -1px;" class="fl"><div class="fl" style="width: 87%;text-align: right;" c><span class="fr" style="width: 100%;">'+e.topic+'</span><span class="fl" style="color: #7e7c7c;width: 100%">'+e.pccus+'</span><hr style="width: 100%;margin-bottom: 2px;"></div><img class="fr" src="'+e.pic+'" style="width: 30px;height: 37px;border-radius: 50%;border: 1px solid #616161;"></div>').prependTo(mmm);
			//		  mmm.append('<div style="width: 100%;text-align: right;" class="fl"><span class="">'+e.pccus+'</span><img class="fr" src="'+e.pic+'" style="width: 30px;"></div>');

		})
		msg.append(mmm);
	}
	if (isbc == true) {
		msg.prependTo($(wid)).animate({opacity: '1'})
	}
	else {
		msg.appendTo($(wid)).animate({opacity: '1'})
	} 
	$.each(msg.find('a.uplink'), function (i, e) {
		var lnk = $(e).attr('href');
		$.ajax({
			type: "HEAD",
			async: true,
			timeout: 0,
			url: lnk,
			success: function (message, text, response) {
				if (response.getResponseHeader('Content-Type').match(/image/i)) {
					var ob = $("<div style='width:100%;max-height:200px;'><button onclick=\"getImgHtml($(this),'"+lnk+"')\" class='btn fa fa-image'>ط¹ط±ط¶ ط§ظ„طµظˆط±ظ‡</button></div>");
					ob.insertAfter(e); $(e).remove();
				}
				if (response.getResponseHeader('Content-Type').match(/video/i)) {
					var ob = $("<div style='width:100%;max-height:200px;'><button onclick=\"getVidHtml($(this),'"+lnk+"')\" class='btn fa fa-youtube-play'>ط¹ط±ط¶ ط§ظ„ظپظٹط¯ظٹظˆ</button></div>");
					ob.insertAfter(e); $(e).remove();

				}
				if (response.getResponseHeader('Content-Type').match(/audio/i)) {
					var ob = $("<div style='width:100%;max-height:300px;'><button onclick=\"getAudHtml($(this),'"+lnk+"')\" class='btn fa fa-youtube-play'>ظ…ظ‚ط·ط¹ طµظˆطھ</button></div>");
					ob.insertAfter(e); $(e).remove();
				}
			}
		});
	});
	if (isbc == true) {
		if ($(wid).find('.mm').length >= 100) {
			$(wid + " .mm").last().remove();
		}
		$(wid).scrollTop(0)
	}
	else {
		if ($(wid).find('.mm').length >= 30) {
			$(wid + " .mm").first().remove();
		}
		$(wid).scrollTop($(wid)[0].scrollHeight)
	}



	return msg;
}
function getImgHtml(th,lin){
	$("</br><a href='" + lin + "' target='_blank'><img onload=\"$(this).show().parent().find('div').hide();\" style='display: none;max-width:240px;max-height:200px;' src='" + lin + "' class='hand fitimg'><div><span class='fl' style='margin-top: 24%;margin-left: 28px;'>طھط­ظ…ظٹظ„ ط§ظ„طµظˆط±ط©</span><div style='margin: 10px 3px 20px;height: 120px;width: 120px;' class='circle'></div></div></a>").insertAfter(th);
	$(th).remove();
}
function getVidHtml(th,lin){
	$("<video style='width:95%;max-height:200px;' controls><source src='" + lin + "'></video>").insertAfter(th);
	$(th).remove();
}
function getAudHtml(th,lin){
	$("<audio style='width:95%;' controls><source src='" + lin + "' type='audio/mpeg'></audio>").insertAfter(th);
	$(th).remove();
}

function openSco(id){
	var  dsed =$("<div><div class='form'><input dir='rtl' value='' name='name' autocomplete='off' required><label for='name' class='label-name'><span class='content-name'>ط§ط¶ظپ ط±ط¯ ظ„ط§ ظٹط²ظٹط¯ ط¹ظ† 100 ط­ط±ظپ</span></label></div><button onclick='send(\"sco\",{bid:\""+id+"\",c:$(this).parent().find(\"input\").val()});$(\"#d2bc .sco\").html(\"\");'type='button' class='btn btn-default'style='border: none;background: white;box-shadow: none;color: #696969;margin-left: 10px;'>ط±ط¯</button><button onclick='$(\"#d2bc .sco\").html(\"\");' type='button' class='btn btn-default'style='border: none;background: white;box-shadow: none;color: #696969;margin-left: 10px;'>ط§ظ„ط؛ط§ط،</button><hr style='margin: 5px;'></div>");
	$('#d2bc .sco').html('');
	var a = $('.bid'+id +' .sco').html(dsed).show();
	a.find('input').val('')
}

var isclose = false;
function gift(id, dr3) {
	send('action', { cmd: 'gift', id: id, gift: dr3 });
}
function close(i)
{ if (isclose) { return; } isclose = true; window.onbeforeunload = null; setTimeout('location.reload();', i || 4000); lstat('info', 'ظٹطھظ… ط¥ط¹ط§ط¯ظ‡ ط§ظ„ط¥طھطµط§ظ„') }
function loadblocked() {
	var d = getv('blocklist');
	if (d != null && d != "") {
		try {
			d = JSON.parse(d);
			if (Array.isArray(d)) {
				blocked = d;
			}
		} catch (er) { }
	}
}
function saveblocked() {
	var d = JSON.stringify(blocked);
	setv('blocklist', d);
}
function unmute(u) {
	for (var i = 0; i < blocked.length; i++) {
		var bl = blocked[i];
		if (bl.lid == u.lid || bl.username == u.username) {
			blocked.splice(i, 1);
			updateu(u.id);
		}
	}
	saveblocked();
}
function muteit(u) {
	if (u.id == myid) { return; }
	for (var i = 0; i < blocked.length; i++) {
		var bl = blocked[i];
		if (bl.lid == u.lid || bl.username == u.username) {
			return;
		}
	}
	blocked.push({ lid: u.lid, topic: u.topic, username: u.username });
	updateu(u.id);
	saveblocked();
}
function ismuted(u) {
	for (var i = 0; i < blocked.length; i++) {
		var bl = blocked[i];
		if (bl.lid == u.lid || bl.username == u.username) {
			return true;
		}
	}
	return false;
}

function upro(id) {
	var rowner = power.roomowner;
	var u = getuser(id); if (u == null) { return; }
	if (u.s && getpower(u.power).rank > power.rank) { return; }
	var ht = $("#upro");
	var upic = u.pic.split('.');
	if (u.pic.split('/').pop().split('.').length > 2) {
		upic.splice(upic.length - 1, 1);
	}
	ht.find('.u-pic').css('background-image', 'url("' + upic.join('.') + '")')
	ht.find('.u-msg').html( u.msg);
	if(uf[(u.co||'').toLocaleLowerCase()]!=null){
		ht.find('.u-co').text(uf[u.co.toLocaleLowerCase()]).append('<img style="width:18px;border-radius:1px;" class="fl co" src="flag/'+(u.co.toLowerCase()||'--') + '.png">');

	} 



















	var uStart =ht.find('.fr.rating-box').children().removeClass().addClass('rating-star empty-star');    
	function addmsgsstar(allmsgs){
		var l = allmsgs.toString().length;
		if(allmsgs<500)return {start:0 ,h:false};
		if(allmsgs>=500 && allmsgs<1000){
			return {start:0 ,h:true};
		}
		//        else if(allmsgs>=1000 && allmsgs<5000){
		//        return {start: ,h:false};
		//    }
		switch (l) {
			case 4:
				if(allmsgs <= 5000)return {start:1 ,h:false};
				return {start:1 ,h:true};
				break;
			case 5:
				if(allmsgs <= 50000)return {start:2 ,h:false};
				return {start:2 ,h:true};
				break;
			case 6:
				if(allmsgs<500000)return {start:3 ,h:false};
				return {start:3 ,h:true};
				break;
			case 7:
				if(allmsgs<5000000)return {start:4 ,h:false};
				return {start:4 ,h:true};
				break;
			case 8:
				if(allmsgs<50000000)return {start:5 ,h:false};
				return {start:5 ,h:true};
				break;
			case 9:
				return {start:5 ,h:false};
				break;

		}
	}
	var stus = addmsgsstar(u.evaluation); 
	for (var i = 0;i<=stus.start;i++){
		if(i==stus.start){
			if(stus.h ==true)$(uStart[i]).removeClass().addClass('rating-star half-star');
		}else{
			$(uStart[i]).removeClass().addClass('rating-star full-star');
		}

	}

















	var ico = getico(u);
	var rtxt = 'ط¨ط¯ظˆظ† ط؛ط±ظپظ‡';
	var room = getroom(u.roomid);
	if (power.unick == true || (power.mynick == true && id == myid)) {
		$('.u-topic').val(u.topic);
		$('.ulikeins').val(u.rep);
		ht.find('.nickbox').show();
		ht.find('.u-nickc').off().click(function () {
			send('unick', { id: id, nick: ht.find('.u-topic').val() });
		});
		ht.find('.u-likeins').off().click(function () {
			send('ulikeins', { id: id, like: parseInt(ht.find('.ulikeins').val()) });
		});
	} else {
		ht.find('.nickbox').hide();
	}

	if (power.ulike == true) {
		$('.ulikeins').val(u.rep);
		ht.find('.likebox').show();
		ht.find('.u-likeins').off().click(function () {
			send('ulikeins', { id: id, like: parseInt(ht.find('.ulikeins').val()) });
		});
	} else {
		ht.find('.likebox').hide();
	}

	if (power.loveu) {
		ht.find('.roombox').show();
		var pb = ht.find('.userRoom');
		pb.empty();
		if(room){
			var hh = $("<option></option>");
			hh.attr('value', room.id);
			hh.text(room.topic);
			pb.append(hh);
		}else{
			pb.append("<option></option>");
		}
		for (var i = 0; i < rooms.length; i++) {
			if (rooms[i].id == u.roomid) { continue; }
			var hh = $("<option></option>");
			hh.attr('value', rooms[i].id);
			hh.text(rooms[i].topic);
			pb.append(hh);
		}
		ht.find('.u-roomleve').off().click(function () {
			if($('.userRoom').val() == u.roomid)return alert('ط§ظ„ط¹ط¶ظˆ ظ…طھظˆط§ط¬ط¯ ظپظٹ  ظ‡ط°ظ‡ ط§ظ„ط؛ط±ظپط© ');
			send('action', { cmd: 'uroomleve', id: id ,room: $('.userRoom').val()});
			ht.modal("hide");	
		});
	}
	else {
		ht.find('.roombox').hide();
	}



	if (power.setpower) {
		ht.find('.powerbox').show();
		var pb = ht.find('.userpower');
		pb.empty();
		pb.append("<option></option>");
		for (var i = 0; i < powers.length; i++) {
			if (powers[i].rank > power.rank) { continue; }
			var hh = $("<option></option>");
			hh.attr('value', powers[i].name);
			hh.text(powers[i].name);
			pb.append(hh);
		}
		if(u.power)pb.val(u.power)
		ht.find('.powerbox .userdays').val(0);
		ht.find('.upower').off().click(function () {
			var days = parseInt(ht.find('.userdays').val()) || 0;
			$.get('cp.nd?cmd=setpower&token=' + token + '&id=' + u.lid + '&power=' + pb.val() + '&days=' + days, function (d) {
				var jq = JSON.parse(d);
				if (jq.err == true) {
					alert(jq.msg);
				}
				else {
					alert('طھظ… طھط±ظ‚ظٹظ‡ ط§ظ„ط¹ط¶ظˆ');
				}
			});

		});
	}
	else {
		ht.find('.powerbox').hide();
	}
	if (room != null) {
		if (room.ops != null) {
			if (room.ops.indexOf(getuser(myid).lid) != -1 || room.owner == getuser(myid).lid || power.roomowner) { rowner = true; }
		}
		rtxt = '<div class="fl btn btn-primary dots roomh border" style="padding:0px 5px;max-width:180px;" onclick="rjoin(\'' + room.id + '\')"><img style="max-width:24px;" src=\'' + room.pic + '\'>' + room.topic + '</div>';
		ht.find('.u-room').html(rtxt);
		ht.find(".u-room").show();
	}
	else {
		ht.find(".u-room").hide();
	}
	if (rowner)
	{ ht.find(".urkick,.umod").show(); }
	else {
		ht.find(".urkick,.umod").hide();
	}

	if (ismuted(u)) {
		ht.find('.umute').hide();
		ht.find('.uunmute').show();
	}
	else {
		ht.find('.umute').show();
		ht.find('.uunmute').hide();
	}
	ht.find('.ureport').hide();
	if (power.history != true) {
		ht.find(".uh").hide();
	} else { ht.find(".uh").show(); }
	if (power.kick < 1) {
		ht.find(".ukick").hide(); ht.find(".udelpic").hide();
	} else { ht.find(".ukick").show(); ht.find(".udelpic").show(); }
	if (!power.ban) {
		ht.find(".uban").hide();
	} else { ht.find(".uban").show(); }
	if (power.upgrades < 1) {
		ht.find(".ugift").hide();
	} else { ht.find(".ugift").show(); }
	if (!power.meiut) {
		ht.find(".meiut").hide();
	} else { ht.find(".meiut").show(); }

	ht.find('.uh').css('background-color', "").off().click(function () {
		$(this).css('background-color', "indianred");
		ht.modal("hide");
		var div = $('<div style="height:100%;" class="u-div break light"></div>');
		popdiv(div, 'ظƒط´ظپ ط§ظ„ظ†ظƒط§طھ');
		$.get("uh?cmd=history&token=" + token + "&u2=" + id, function (datar) {
			var d = JSON.parse(datar);
			if(d){
				if(d.error)return div.text(d.msg);
				$.each(d, function (i, e) {
					var dd = $("<div class='borderg'></div>");
					dd.append('<label class="label label-info">ط§ظ„ط¹ط¶ظˆ</lable><br>');
					dd.append($('<div></div>').text(e.username));
					dd.append('<label class="label label-info">ط§ظ„ط²ط®ط±ظپظ‡</lable><br>');
					dd.append($('<div></div>').text(e.topic));
					dd.append('<label class="label label-info">ط§ظ„ط¢ظٹ ط¨ظٹ</lable><br>');
					dd.append($('<div></div>').text(e.ip));
					dd.append('<label class="label label-info">ط§ظ„ط¬ظ‡ط§ط²</lable><br>');
					dd.append($('<div></div>').text(e.fp));
					div.append(dd);
				});
			}else{
				alert('ط®ط·ط§ط، ظپظٹ ط¬ظ„ط¨ ط§ظ„ط¨ظٹط§ظ†ط§طھ')
			}
		});
	});
	//if(power.rank<11){ht.find('.unot').hide();}else{ht.find('.unot').show();}

	ht.find('.umute').css('background-color', "").off().click(function () { $(this).css('background-color', "indianred"); muteit(u); ht.find('.umute').hide(); ht.find('.uunmute').show(); });
	ht.find('.uunmute').css('background-color', "").off().click(function () { $(this).css('background-color', "indianred"); unmute(u); ht.find('.umute').show(); ht.find('.uunmute').hide(); });
	ht.find('.umod').css('background-color', "").off().click(function () { $(this).css('background-color', "indianred"); send('op+', { lid: u.lid }); });
	ht.find('.ulike').css('background-color', "").off().click(function () { $(this).css('background-color', "indianred"); send('action', { cmd: 'like', id: id }); }).text((u.rep || 0) + '');
	ht.find('.ureport').css('background-color', "").off().click(function () { $(this).css('background-color', "indianred"); send('action', { cmd: 'report', id: id }); });
	ht.find('.ukick').css('background-color', "").off().click(function () { $(this).css('background-color', "indianred"); send('action', { cmd: 'kick', id: id }); ht.modal("hide"); });
	ht.find('.udelpic').css('background-color', "").off().click(function () { $(this).css('background-color', "indianred"); send('action', { cmd: 'delpic', id: id }); });
	ht.find('.urkick').css('background-color', "").off().click(function () { $(this).css('background-color', "indianred"); send('action', { cmd: 'roomkick', id: id }); ht.modal("hide"); });
	ht.find('.meiut').css('background-color', "").off().click(function () { $(this).css('background-color', "indianred").text(!u.meiut ? 'ط§ظ„ط؛ط§ط، ط§ظ„ط§ط³ظƒط§طھ':'ط§ط³ظƒط§طھ'); send('action', { cmd: 'meiut', id: id }); ht.modal("hide"); });

	ht.find('.uban').css('background-color', "").off().click(function () { $(this).css('background-color', "indianred"); send('action', { cmd: 'ban', id: id }); ht.modal("hide"); });
	ht.find('.unot').css('background-color', "").off().click(function () {
		var m = prompt('ط§ظƒطھط¨ ط±ط³ط§ظ„طھظƒ', '');
		if (m == null || m == '') { return; }

		$(this).css('background-color', "indianred"); send('action', { cmd: 'not', id: id, msg: m });
	}
																																																									);

	ht.find('.ugift').css('background-color', "").off().click(function () {

		var dd = $('<div class="break" style="height:49%;min-width:200px;margin-right: 2pxbackground-color:white;"></div>');
		$.each(dro3, function (i, e) {
			dd.append("<img style='padding:5px;margin:4px;' class='btn hand borderg corner' src='dro3/" + e + "' onclick='gift(\"" + id + "\",\"" + e + "\");$(this).parent().pop(\"remove\")'>");
		});
		dd.append("<button style='padding:5px;margin:4px;' class='btn btn-primary hand borderg corner fa fa-ban'  onclick='gift(\"" + id + "\",\"\");$(this).parent().pop(\"remove\")'>ط¥ط²ط§ظ„ظ‡ ط§ظ„ظ‡ط¯ظٹظ‡</button>");
		//   dd.pop({ left: '20%', top: "20px", width: "220px", height: "280px" }).pop('show').popTitle('ط§ط±ط³ظ„ ظ‡ط¯ظٹظ‡');
		//  dd.parent().parent().css('z-index', 3000);

		ht.find('.ugift')
			.popover({ placment: 'left', content: dd[0].outerHTML + '', trigger: 'focus', title: 'ط£ط±ط³ظ„ ظ‡ط¯ظٹظ‡ !', html: true })
			.popover('show');
		$(".popover-content").html(dd[0].outerHTML);
		//  var m = prompt('ط§ظƒطھط¨ ظ‚ظٹظ…ظ‡ ط§ظ„ظ‡ط¯ظٹظ‡ ظ…ظ† 10 ط£ظ„ظ‰ 250','');
		//if(m==null || m=='' || isNaN(m)){return;} 
		//  if (m >= 10 && m <= 250)
		// {
		//   $(this).css('background-color',"indianred");send('action',{cmd:'gift',id: id,gift:m});}
	});
	// ht.find('.u-msg').html(u.msg);
	ht.modal({ backdrop: "static" });// ht.dialog({modal:true, width:280,position:{my: "center", at: "center", of:  $("#chat")}}).dialog("open").width("100%").parent().css("top","10%");
	var uico = "";
	if (ico != '') {
		uico = '<img class="fl u-ico"  alt="" src="' + ico + '">'
	}
	ht.find('.modal-title').html("<img onload=\"$(this).parent().parent().parent().find('.imgBrofil').css({'opacity':1,'height':''}).parent().find('.u-pic').css('display','block').children().hide();\" style='width:18px;height:18px;' src='" + u.pic +"'>" + uico + u.topic);
	ht.find('.upm').off().click(function () { ht.modal("hide"); openw(id, true); });
}
function popframe(lnk, title) {
	if ($('#uh').length) { $('#uh').parent().parent().remove(); }
	newpop(title, "<iframe class='filh' style='overflow: scroll !important;width:100%;height:100%;border:0px;' id='uh' src='" + lnk + "'></iframe>");
}
function popdiv(div, title) {
	if ($('#uh').length) { $('#uh').parent().parent().remove(); }
	newpop(title, div);

}
function newpop(title, body) {
	var p = $($("#pop").html());
	p.find(".title").append(title);
	p.find('.pphide').addClass('phide');
	p.find('.body').append(body);
	$('.dad').append(p);
	p.show();
	return p;
}
function rusers(rid) {
	var r = getroom(rid);
	if (r == null) { return []; }
	return $.grep(users, function (e) { return e.roomid == rid; })
}
function getUrlParameter(sParam) {
	var sPageURL = window.location.search.substring(1);
	var sURLVariables = sPageURL.split('&');
	for (var i = 0; i < sURLVariables.length; i++) {
		var sParameterName = sURLVariables[i].split('=');
		if (sParameterName[0] == sParam) {
			return ('' + decodeURIComponent(sParameterName[1])).split("<").join("&#x3C;");
		}
	}
}
function mkr() {
	$('#ops').children().remove();

	var ht = $("#mkr");

	ht.find(".rsave").hide();
	ht.find(".rdelete").hide();
	ht.find('.modal-title').text('ط¥ظ†ط´ط§ط، ط؛ط±ظپظ‡ ط¬ط¯ظٹط¯ط©');
	ht.modal({ backdrop: "static" });
	ht.find(".rtopic").val('');
	ht.find(".rabout").val('');
	ht.find(".rpwd").val('');
	ht.find(".rwelcome").val('');
	ht.find(".rmax").val('');
	ht.find('.rdel').prop('checked', false).parent().show()
	ht.find('.rmake').show().off().click(function () {
if(ht.find(".rtopic").val().length <=0)return alert('ظ„ط§ ظٹظ…ظƒظ† طھط±ظƒ ط§ط³ظ… ط§ظ„ط؛ط±ظپط© ظپط§ط±ط؛ط§ظ‹ ')
if(ht.find(".rabout").val().length <=0)return alert('ظ„ط§ ظٹظ…ظƒظ† طھط±ظƒ ظˆطµظپ ط§ظ„ط؛ط±ظپط© ظپط§ط±ط؛ط§ظ‹ ط§طھط±ظƒ ظ…ط³ط§ظپط© ط¹ظ„ظ‰ ط§ظ„ط§ظ‚ظ„ ')
		send("r+", {
			topic: ht.find(".rtopic").val(),
			about: ht.find(".rabout").val(),
			welcome: ht.find(".rwelcome").val(),
			pass: ht.find(".rpwd").val(),
			max: ht.find(".rmax").val(),
			"delete": ht.find('.rdel').prop('checked') == false,
		}); ht.modal("hide");

	})
}
function redit(id) {
	$('#ops').children().remove();

	if (id == null) { id = myroom }

	var r = getroom(id);

	if (r == null) { return; }
	var ht = $("#mkr");
	ht.find('.modal-title').text('ط¥ط¯ط§ط±ظ‡ ط§ظ„ط؛ط±ظپظ‡');
	ht.append('<div id="ddd"></div>');
	ht.find(".rsave").show().off().click(function () {
		send("r^", {
			id: id, topic: ht.find(".rtopic").val(),
			about: ht.find(".rabout").val(),
			welcome: ht.find(".rwelcome").val(),
			pass: ht.find(".rpwd").val(),
			max: ht.find(".rmax").val(),
		}); ht.modal("hide");

	});
	ht.find(".rdelete").show().off().click(function () {
		send("r-", { id: id }); ht.modal("hide");

	});
	ht.modal({ backdrop: "static", title: "ffff" });
	ht.find(".rpwd").val('');
	ht.find(".rtopic").val(ht.find('#ddd').html(r.topic).text());
	ht.find(".rabout").val(ht.find('#ddd').html(r.about).text());
	ht.find(".rwelcome").val(ht.find('#ddd').html(r.welcome).text());
	ht.find(".rmax").val(r.max);
	ht.find('.rmake').hide();
	ht.find('.rdel').parent().hide();
	send('ops', {});
}
function updaterooms() {
	if (needUpdate == false) { return; }

	var u = getuser(myid)
	if (u == null) { return; }
	//   if (u.lid==data.owner){ $('#rooms .r'+data.id)}
	$('.brooms').text(rooms.length);
	$.each(rooms, function (i, e) {
		var ht = $("." + e.id)
		if (e.owner == (u.lid || '')) {
			ht.css('background-color', 'snow');
		}
		var ru = $.grep(rusers(e.id), function (e) { return e.s == null; });
		ht.find(".uc").html(ru.length + "/" + e.max).attr("v", ru.length)
		ht.attr("v", ru.length);
	});
	$('#rooms').find(".room").sort(function (a, b) {
		var av = parseInt($(a).attr('v'));
		var bv = parseInt($(b).attr('v'));
		if (av == bv) {
			return ($(a).find('.u-topic').text() + '').localeCompare(($(b).find('.u-topic').text() + ''))
		}
		return av < bv ? 1 : -1;
	});
}
function updater(r) {
	var ht = $("." + r.id);
	ht.find(".u-pic").attr("src", r.pic);
	ht.find(".u-topic").html(r.topic);
	ht.find(".u-msg").html(r.about);
	needUpdate = true;
	if (r.needpass) { ht.find('.u-topic').prepend('<img src="imgs/lock.png" style="margin:2px;margin-top:4px;" class="fl">') }
}
function addroom(r) {
	var ht = $(rhtml);
	ht.addClass( r.id);
	ht.attr("onclick", "rjoin('" + r.id + "');");
	$("#rooms").append(ht);

	updater(r);
}
function getuserbylid(id)
{ return $.grep(users, function (value) { return value.lid == id; })[0]; }
function getuserbyname(username)
{ return $.grep(users, function (value) { return value.username == username; })[0]; }
function getuser(id)
{ return $.grep(users, function (value) { return value.id == id; })[0]; }
function getroom(id)
{ return $.grep(rooms, function (value) { return value.id == id; })[0]; }
function wclose(id) {
	$("#c" + id).remove();
	$(".w" + id).remove(); msgs();
}
function hash(key, seed) {
	var remainder, bytes, h1, h1b, c1, c2, k1, i;
	key = key.join('')
	remainder = key.length & 3; // key.length % 4
	bytes = key.length - remainder;
	h1 = seed;
	c1 = 0xcc9e2d51;
	c2 = 0x1b873593;
	i = 0;
	while (i < bytes) {
		k1 =
			((key.charCodeAt(i) & 0xff)) |
			((key.charCodeAt(++i) & 0xff) << 8) |
			((key.charCodeAt(++i) & 0xff) << 36) |
			((key.charCodeAt(++i) & 0xff) << 24);
		++i;

		k1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 36) * c1) & 0xffff) << 36))) & 0xffffffff;
		k1 = (k1 << 15) | (k1 >>> 17);
		k1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 36) * c2) & 0xffff) << 36))) & 0xffffffff;

		h1 ^= k1;
		h1 = (h1 << 13) | (h1 >>> 19);
		h1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 36) * 5) & 0xffff) << 36))) & 0xffffffff;
		h1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 36) + 0xe654) & 0xffff) << 36));
	}
	k1 = 0;
	switch (remainder) {
		case 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 36;
		case 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;
		case 1: k1 ^= (key.charCodeAt(i) & 0xff);
			k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 36) * c1) & 0xffff) << 36)) & 0xffffffff;
			k1 = (k1 << 15) | (k1 >>> 17);
			k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 36) * c2) & 0xffff) << 36)) & 0xffffffff;
			h1 ^= k1;
	}
	h1 ^= key.length;
	h1 ^= h1 >>> 36;
	h1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 36) * 0x85ebca6b) & 0xffff) << 36)) & 0xffffffff;
	h1 ^= h1 >>> 13;
	h1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 36) * 0xc2b2ae35) & 0xffff) << 36))) & 0xffffffff;
	h1 ^= h1 >>> 36;
	return (h1 >>> 0).toString(36);;
}
function ccode() {

	try {
		var d = new Date();
		var rt = d.getFullYear() + ''
		if ((d.getMonth() + 1) < 10) { rt += '0'; }
		rt += '' + (d.getMonth() + 1);
		if (d.getDate() < 10) { rt += '0'; }
		rt += '' + d.getDate();
		if (d.getHours()/2 < 10) { rt += '0'; }
		rt += '' + parseInt(d.getHours()/2) ; 
		return parseInt(rt).toString(32)
	}
	catch (err)
	{ console.log(err); return 'ERR'; }
}
function getfp() {
	try {
		if (typeof window.name == 'string') { if (window.name.indexOf('{') == 0 && window.name.lastIndexOf('}') == window.name.length - 1) { var op = JSON.parse(window.name); setv('fp1', op.fp1 || ''); setv('cc', op.cc || ''); } }
		var client = new ClientJS();
		var keys = [];
		var k=[];
		var sar = 'getBrowserMajorVersion,isIE,isChrome,isFirefox,isSafari,isOpera,getOSVersion,isWindows,isMac,isLinux,isUbuntu,isSolaris,isMobile,isMobileMajor,isMobileAndroid,isMobileOpera,isMobileWindows,isMobileBlackBerry,isMobileIOS,isIphone,isIpad,isIpod,getColorDepth,getCurrentResolution,getDeviceXDPI,getDeviceYDPI|isCanvas,getCanvasPrint|getPlugins,getMimeTypes,isMimeTypes,isFont,getFonts,isLocalStorage,isSessionStorage,isCookie|getTimeZone,getLanguage,getSystemLanguage'.split('|');
		var hh="";
		for (var ii = 0; ii < sar.length; ii++) {
			var sh=sar[ii].split(',');
			for(var io=0;io<sh.length;io++)
			{
				var vl = '';
				try { vl = (client[sh[io]]() || '') + '' } catch (er) { }
				keys.push(vl); 
			}
			hh+= "." + hash(keys, 256);
			keys=[];
		}
		var cc = getv('cc') || '';
		var fp = getv('fp1') || '';
		var rf = getv('refr') || '';
		if (fp == '') { fp = (client.getOS().replace('Windows', 'Win') + "." + client.getOSVersion() + "." + client.getBrowser() ).split(" ").join("-").split('_').join('-') + hh; setv('fp1', fp) }
		if (cc == '') {
			cc = ccode();
			setv('cc', cc);
		}
		window.name = JSON.stringify({ fp1: fp, cc: cc });
		return fp + '.' + hash([rf], 256) + '.' + cc;
	}
	catch (err) {
		console.log(err);
		var cc = getv('cc');
		if (cc == '' || cc == null) {
			cc = ccode();
			setv('cc', cc);
		} return 'ERR.' + cc;
	}
}
function onvnot(vnot, id) {
	$(vnot).on('touchstart mousedown', function (e) { hl($(vnot), 'danger'); record(function (blob) { onrec(blob, id); }, $(vnot)) });
	$(vnot).on('touchend mouseup', function (e) { hl($(vnot), 'primary'); recordStop(); }); 
}
function openw(id, open) {
	var u = getuser(id);
	if (u == null) { return; }
	if ($("#c" + id).length == 0) {
		var uhh = $(uhtml);
		var ico = getico(u);
		if (ico != '') {
			uhh.find('.u-ico').attr('src', ico);
		}
		uhh.find(".u-msg").text("..");
		uhh.find(".u-pic").css({ 'background-image': 'url("' + u.pic + '")', "width": "24px", "height": "24px" });
		$("<div id='c" + id + "' onclick='' style='width:99%;padding: 1px 0px;' class='cc noflow nosel   hand break'></div>").prependTo("#chats");
		$("#c" + id).append(uhh).append('<div onclick="wclose(\'' + id + '\')" style="margin-top:3px;margin-right:2px;" class="label border mini label-danger fr fa fa-times">ط­ط°ظپ</div>').find('.uzr').css("width", "76%").attr('onclick', "openw('" + id + "',true);").find('.u-msg').addClass('dots');

		var dod = $($("#cw").html());
		$(dod).addClass("w" + id);
		$(dod).find('.emo').addClass('emo' + id);
		dod.find(".fa-user").click(function () { upro(id); $("#upro").css('z-index', '2002'); })

		dod.find(".head .u-pic").css('background-image', 'url("' + u.pic + '")')
		var uh = $(uhtml);
		if (ico != '') {
			uh.find('.u-ico').attr('src', ico);
		}
		uh.find(".head .u-pic").css("width", "28px").css("height", "28px").css("margin-top", "-2px").parent().click(function () { upro(id); });
		uh.css("width", "70%").find(".u-msg").remove();
		$(dod).find(".uh").append(uh);
		$(dod).find(".d2").attr("id", "d2" + id);
		$(dod).find(".wc").click(function () { wclose(id); });
		$(dod).find(".fa-share-alt").click(function () { sendfile(id); });

		$(dod).find(".sndpm").click(function (e) { e.preventDefault(); sendpm({ data: { uid: id } }) });

		$(dod).find(".tbox").addClass("tbox" + id).keyup(function (e) {

   if (e.keyCode == 13) { e.preventDefault(); sendpm({ data: { uid: id } }) }else{if(updateTypingT)updateTyping(id)}
		});
		var ubg = u.bg;
		if (ubg == '') { ubg = '#FAFAFA'; }
		$(dod).find(".head").append(uhead());
		dod.find('.u-ico').attr('src', ico);

		$(".dad").append(dod);
		emopop('.emo' + id); $(dod).find('.head .u-pic').css('background-image', 'url(\'' + u.pic + '\')').css("width", "20px").css("height", "20px").parent().click(function () { upro(id); $("#upro").css('z-index', '2002') });
		$(dod).find('.head .u-topic').css("color", u.ucol).css("background-color", ubg).html(u.topic);
		$(dod).find('.head .phide').click(function () { $(dod).removeClass('active').hide(); })
		$("#c" + id).find('.uzr').click(function () { $("#c" + id).removeClass("unread"); msgs(); });
		updateu(id);
	}


	if (open) {
		$(".phide").trigger('click'); $(".w" + id).css("display", '').addClass('active').show(); $('.pn2').hide(); setTimeout(function () {
			fixSize(); $('.w' + id).find('.d2').scrollTop($('.w' + id).find('.d2')[0].scrollHeight);
		}, 100); $('.dpnl').hide();
	}
	else {
		if ($(".w" + id).css("display") == 'none') { $("#c" + id).addClass("unread"); }
	}
	msgs();

}
function popover(el, data, pos) {
	var e = $(el);
	e.popover({
		placement: pos || 'top',
		html: true,
		content: function () {
			return $(data)[0].outerHTML;
		},
		title: ''
	});
}
function msgs() {
	var co = $("#chats").find('.unread').length;
	if (co != 0) { $('.chats').find('.badge').text(co); hl($('.chats'), 'warning') } else { $('.chats').find('.badge').text(''); hl($('.chats'), 'primary') }
}
var uhd = '*';
function uhead() {
	if (uhd == '*') { uhd = $('#uhead').html() }
	return uhd;
}
function loadpro() {
	jQuery.fn.sort = (function () {

		var sort = [].sort;

		return function (comparator, getSortable) {

			getSortable = getSortable || function () { return this; };

			var placements = this.map(function () {

				var sortElement = getSortable.call(this),
								parentNode = sortElement.parentNode,

								// Since the element itself will change position, we have
								// to have some way of storing its original position in
								// the DOM. The easiest way is to have a 'flag' node:
								nextSibling = parentNode.insertBefore(
									document.createTextNode(''),
									sortElement.nextSibling
								);

				return function () {

					if (parentNode === this) {
						throw new Error(
							"You can't sort elements if any one is a descendant of another."
						);
					}

					// Insert before flag:
					parentNode.insertBefore(this, nextSibling);
					// Remove flag:
					parentNode.removeChild(nextSibling);

				};

			});

			return sort.call(this, comparator).each(function (i) {
				placements[i].call(getSortable.call(this));
			});

		};

	})();
	if (!Array.prototype.findall) {
		Array.prototype.findall = function (fun/*, thisArg*/) {
			'use strict';

			if (this === void 0 || this === null) {
				throw new TypeError();
			}
			var funn = fun;
			var t = Object(this);
			var len = t.length >>> 0;
			if (typeof fun !== 'function') {
				//    throw new TypeError();
				funn = function (i, e) {
					var k = Object.keys(fun);
					var isok = 0;
					k.forEach(function (ee, ii) {
						if (funn[ee] == e[ee]) { isok += 1; }
					}); return isok == k.length;
				}
			}
			var arr = [];
			var thisArg = arguments.length >= 2 ? arguments[1] : void 0;
			for (var i = 0; i < len; i++) {
				if (i in t) {
					var val = t[i];

					// NOTE: Technically this should Object.defineProperty at
					//       the next index, as push can be affected by
					//       properties on Object.prototype and Array.prototype.
					//       But that method's new, and collisions should be
					//       rare, so use the more-compatible alternative.
					if (funn.call(thisArg, val, i, t)) {
						arr.push(val);

					}
				}
			}

			return arr;
		};
	}
	if (!Array.prototype.findone) {
		Array.prototype.findone = function (fun/*, thisArg*/) {
			'use strict';

			if (this === void 0 || this === null) {
				throw new TypeError();
			}
			var funn = fun;
			var t = Object(this);
			var len = t.length >>> 0;
			if (typeof fun !== 'function') {
				//    throw new TypeError();
				funn = function (i, e) {
					var k = Object.keys(fun);
					var isok = 0;
					k.forEach(function (ee, ii) {
						if (funn[ee] == e[ee]) { isok += 1; }
					}); return isok == k.length;
				}
			}
			var thisArg = arguments.length >= 2 ? arguments[1] : void 0;
			for (var i = 0; i < len; i++) {
				if (i in t) {
					var val = t[i];

					// NOTE: Technically this should Object.defineProperty at
					//       the next index, as push can be affected by
					//       properties on Object.prototype and Array.prototype.
					//       But that method's new, and collisions should be
					//       rare, so use the more-compatible alternative.
					if (funn.call(thisArg, val, i, t)) {
						return val;
					}
				}
			}

			return null;
		};
	}
	if (!Array.prototype.forEach) {

		Array.prototype.forEach = function (callback, thisArg) {

			var T, k;

			if (this == null) {
				throw new TypeError(' this is null or not defined');
			}

			// 1. Let O be the result of calling ToObject passing the |this| value as the argument.
			var O = Object(this);

			// 2. Let lenValue be the result of calling the Get internal method of O with the argument "length".
			// 3. Let len be ToUint32(lenValue).
			var len = O.length >>> 0;

			// 4. If IsCallable(callback) is false, throw a TypeError exception.
			// See: http://es5.github.com/#x9.11
			if (typeof callback !== "function") {
				throw new TypeError(callback + ' is not a function');
			}

			// 5. If thisArg was supplied, let T be thisArg; else let T be undefined.
			if (arguments.length > 1) {
				T = thisArg;
			}

			// 6. Let k be 0
			k = 0;

			// 7. Repeat, while k < len
			while (k < len) {

				var kValue;

				// a. Let Pk be ToString(k).
				//   This is implicit for LHS operands of the in operator
				// b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.
				//   This step can be combined with c
				// c. If kPresent is true, then
				if (k in O) {

					// i. Let kValue be the result of calling the Get internal method of O with argument Pk.
					kValue = O[k];

					// ii. Call the Call internal method of callback with T as the this value and
					// argument list containing kValue, k, and O.
					callback.call(T, kValue, k, O);
				}
				// d. Increase k by 1.
				k++;
			}
			// 8. return undefined
		};
	}
	Array.prototype.remove = function () {
		var what, a = arguments, L = a.length, ax;
		while (L && this.length) {
			what = a[--L];
			while ((ax = this.indexOf(what)) !== -1) {
				this.splice(ax, 1);
			}
		}
		return this;
	};
	Object.getPrototypeOf(localStorage).p1 = function(){return null}
	

}
/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */





(function ($) {
	$.fn.popTitle = function (html) {
		var popclose = this.parent().parent().find('.phide').detach();
		this.parent().parent().find('.pophead').html(html).prepend(popclose);
		return this;
	}
	$.fn.pop = function (options) {
		if (this.hasClass('pop')) { ; return this.find('.popbody').children(0).pop(options) }

		switch (options) {
			case 'show':
				if (this.parent().hasClass('popbody') == false) { this.pop(); }
				$('.pop').css('z-index', 2000);
				this.parent().parent().css('z-index', 2001)
				this.parent().parent().css('display', '');
				fixSize();
				return this;
				break;
			case 'hide':
				this.parent().parent().css('display', 'none');
				return this;
				break;

			case 'remove':
				this.parent().parent().remove();
				return this;
				break;
		}
		var settings = $.extend({
			width: '50%', height: '50%', top: '5px', left: '5px',
			title: "",
			close: 'hide',
			bg: $(document.body).css('background-color')
		}, options);

		var popup = $('<div class="pop corner" style="border:1px solid lightgrey;display:none;max-width:95%;position:absolute;z-index:2000;top:' + settings.top + ';left:' + settings.left + '"></div>')
		.css({ "background-color": settings.bg, "width": settings.width, "height": settings.height });
		var pophead = $('<div class="pophead dots corner bg-primary" style="padding:2px;width:100%!important;"></div>').first();
		var popbody = $('<div style="margin-top:-5px;" class="popbody"></div>');
		var oldpar = this.parent();
		popbody.append(this);
		pophead.html(settings.title);
		pophead.prepend('<span onclick="$(this).pop(\'' + settings.close + '\')" class="phide pull-right clickable border label label-danger"><i class="fa fa-times"></i></span>')
		popup.on('resize', function () { popbody.css('height', popup.height() - pophead.outerHeight(true) + 'px'); });
		popup.append(pophead);
		popup.append(popbody);
		if (oldpar.length == 0) {
			$("#content").append(popup);
		}
		else {
			oldpar.append(popup);
		}
		return this;
	};

}(jQuery));
function getCSSRule(ruleName, deleteFlag) {               // Return requested style obejct
	ruleName = ruleName.toLowerCase();                       // Convert test string to lower case.
	if (document.styleSheets) {                            // If browser can play with stylesheets
		for (var i = 0; i < document.styleSheets.length; i++) { // For each stylesheet
			var styleSheet = document.styleSheets[i];          // Get the current Stylesheet
			var ii = 0;                                        // Initialize subCounter.
			var cssRule = false;                               // Initialize cssRule. 
			do {                                             // For each rule in stylesheet
				if (styleSheet.cssRules) {                    // Browser uses cssRules?
					cssRule = styleSheet.cssRules[ii];         // Yes --Mozilla Style
				} else {                                      // Browser usses rules?
					cssRule = styleSheet.rules[ii];            // Yes IE style. 
				}                                             // End IE check.
				if (cssRule) {                               // If we found a rule...
					if (cssRule.selectorText == ruleName) { //  match ruleName?
						if (deleteFlag == 'delete') {             // Yes.  Are we deleteing?
							if (styleSheet.cssRules) {           // Yes, deleting...
								styleSheet.deleteRule(ii);        // Delete rule, Moz Style
							} else {                             // Still deleting.
								styleSheet.removeRule(ii);        // Delete rule IE style.
							}                                    // End IE check.
							return true;                         // return true, class deleted.
						} else {                                // found and not deleting.
							return cssRule;                      // return the style object.
						}                                       // End delete Check
					}                                          // End found rule name
				}                                             // end found cssRule
				ii++;                                         // Increment sub-counter
			} while (cssRule)                                // end While loop
		}                                                   // end For loop
		}                                                      // end styleSheet ability check
		return false;                                          // we found NOTHING!
	}                                                         // end getCSSRule 

	function killCSSRule(ruleName) {                          // Delete a CSS rule   
		return getCSSRule(ruleName, 'delete');                  // just call getCSSRule w/delete flag.
	}                                                         // end killCSSRule

	function addCSSRule(ruleName) {                           // Create a new css rule
		if (document.styleSheets) {                            // Can browser do styleSheets?
			if (!getCSSRule(ruleName)) {                        // if rule doesn't exist...
				if (document.styleSheets[0].addRule) {           // Browser is IE?
					document.styleSheets[0].addRule(ruleName, null, 0);      // Yes, add IE style
				} else {                                         // Browser is IE?
					document.styleSheets[0].insertRule(ruleName + ' { }', 0); // Yes, add Moz style.
				}                                                // End browser check
			}                                                   // End already exist check.
		}                                                      // End browser ability check.
		return getCSSRule(ruleName);                           // return rule we just created.
	}

	function sendpic() {
		var e = $("<input  accept='image/*' type='file' style='display:none;'/>").first();

		e.trigger('click');


		var xx;

		$(e).on('change', function () {

			$('.spic').attr('src', 'images/ajax-loader.png');
			var formData = new FormData();
			formData.append('photo', $(e).prop('files')[0]);
			var ty = $(e).prop('files')[0].type.split('/')[0]
			xx = $.ajax({
				xhr: function () {
					var xhr = new window.XMLHttpRequest();
					//Upload progress
					xhr.upload.addEventListener("progress", function (evt) {
						if (evt.lengthComputable) {
							var percentComplete = evt.loaded / evt.total;
							//Do something with upload progress
							// $(e).children('p').html( + "%");

						}
					}, false);

					return xhr;
				},
				timeout: 0,
				url: 'pic?cmd=upload&f=pic&t='+ty+'&token='+token,
				//      url: 'pic?secid=u&fn=' + $(e).val().split('.').pop(),
				type: 'POST',
				data: formData,
				cache: false,

				processData: false,
				contentType: false,
				success: function (data) {
					var d = JSON.parse(data);
					if(d){
						if(d.error){
							ondata("not", {force: true,msg:d.msg})
						}else{
							send('setpic', { pic: d.msg });
						}
					}
					$('.spic').attr('src', '');
					$(e).remove();
				},
				error: function () { $('.spic').attr('src', ''); alert('ظپط´ظ„ ط¥ط±ط³ط§ظ„ ط§ظ„طµظˆط±ظ‡ طھط£ظƒط¯ ط§ظ† ط­ط¬ظ… ط§ظ„طµظˆط±ظ‡ ظ…ظ†ط§ط³ط¨'); }
			});
		});
	}

	function sendfile(id, onsend) {
		pickedfile = null;
		var e = $("<div></div>").first();
		e.append("<input type='file'  accept='image/*, video/*, audio/*' style='display:none;'/>");
		e.children('input').trigger('click');

		var xx;
		$(e).children('input').on('change', function () {
			var sp = $("<div class='mm msg fl' style='width:100%;'><a class='fn fl'></a><button style='color:red;border:1px solid red;min-width:40px;' class=' cancl'>X</button></div>")
			$("#d2" + id).append(sp);
			$(sp).find(".cancl").click(function () { $(sp).remove(); xx.abort(); });
			var formData = new FormData();
			var ty = $(e).children('input').prop('files')[0].type.split('/')[0]
			formData.append('photo', $(e).children('input').prop('files')[0]);
			xx = $.ajax({
				xhr: function () {
					var xhr = new window.XMLHttpRequest();
					//Upload progress
					xhr.upload.addEventListener("progress", function (evt) {
						if (evt.lengthComputable) {
							var percentComplete = evt.loaded / evt.total;
							$(sp.find(".fn")).text("%" + parseInt(percentComplete * 100) + " | " + $(e).children('input').val().split("\\").pop());
						}
					}, false);

					return xhr;
				},
				timeout: 0,
				url: 'upload?cmd=upload&f=up&t='+ty+'&token='+token,
				type: 'POST',
				data: formData,
				cache: false,
				processData: false,
				contentType: false,
				success: function (data) {
					var d = JSON.parse(data);
					if(d){
						if(d.error){
							ondata("not", {force: true,msg:d.msg})
						}else{
							pickedfile = d.msg;
							if (onsend != null) { onsend(d.msg) } else { send('file', { pm: id, link: d.msg }) }
						}
					}

					$(e).remove();
					$(sp).remove();
				},
				error: function () { $(sp).remove(); }
			});

		});
	}
	function encode(str) { return encodeURIComponent(str).split("'").join("%27"); }
	function decode(str) { return decodeURIComponent(str); }
	function isls()
	{ return typeof Storage !== "undefined"; }
	function setv(name, value)
	{ if (isls()) { localStorage.setItem(name, value); } else { setCookie(name, value); } 

	}
	function getv(name)
	{ if (isls()) { var v = localStorage.getItem(name); if (v == "null" || v == null) { v = "" } return v; } else { return getCookie(name); } 
	}
	function setCookie(cname, cvalue, exdays) {
		var d = new Date();
		d.setTime(d.getTime() + (333 * 24 * 60 * 60 * 1000));
		var expires = "expires=" + d.toUTCString();
		document.cookie = cname + "=" + encode(cvalue) + "; " + expires;
	}
	function isIE9OrBelow() {
		return /MSIE\s/.test(navigator.userAgent) && parseFloat(navigator.appVersion.split("MSIE")[1]) < 10;
	}

	function getCookie(cname) {
		var name = cname + "=";
		var ca = document.cookie.split(';');
		for (var i = 0; i < ca.length; i++) {
			var c = ca[i];
			while (c.charAt(0) == ' ') c = c.substring(1);
			if (c.indexOf(name) != -1) return decode(c.substring(name.length, c.length));
		}
		return "";
	}

	cmsg = null;
	function sendpic_() {
		if (cmsg != null) { return; }
		var o = { cmd: 'upload_i', busy: false, url: 'pic?secid=u&fn=%' }
		$('.spic').attr('src', 'images/ajax-loader.png');
		o.done = function (link) {
			send('setpic', { pic: link });
			cmsg = null;
			$('.spic').attr('src', '');
			// finish
		}
		o.progress = function (i) {

		}
		o.error = function () {
			alert('error')
			cmsg = null;
			$('.spic').attr('src', ''); alert('ظپط´ظ„ ط¥ط±ط³ط§ظ„ ط§ظ„طµظˆط±ظ‡ طھط£ظƒط¯ ط§ظ† ط­ط¬ظ… ط§ظ„طµظˆط±ظ‡ ظ…ظ†ط§ط³ط¨');
		}
		cmsg = o;
	}
	function sendfile_(id, onsend) {
		if (cmsg != null) { return; }
		var o = { cmd: 'upload_iv', busy: false, url: 'upload?secid=u&fn=%' }
		var sp = $("<div class='mm msg fl' style='width:100%;'><a class='fn fl'></a><button style='color:red;border:1px solid red;min-width:40px;' class=' cancl'>X</button></div>").first();
		$("#d2" + id).append(sp);
		$(sp).find(".cancl").click(function () { $(sp).remove(); });
		o.id = id;
		o.sp = sp;
		o.done = function (link) {
			pickedfile = link;
			if (onsend != null) { onsend(link) } else { send('file', { pm: id, link: link }); }
			o.sp.remove();
			cmsg = null;
			// finish
		}
		o.progress = function (i) {
			o.sp.find(".fn").text('%' + i + ' ' + o.fn);
		}
		o.error = function () {

			cmsg = null;
			o.sp.remove(); alert('ظپط´ظ„ ط¥ط±ط³ط§ظ„ ط§ظ„ظ…ظ„ظپ .. ط­ط§ظˆظ„ ظ…ط±ظ‡ ط£ط®ط±ظ‰ .');
		}
		cmsg = o;
	}
	uf={"kw":"ط§ظ„ظƒظˆظٹطھ","et":"ط¥ط«ظٹظˆط¨ظٹط§","az":"ط£ط°ط±ط¨ظٹط¬ط§ظ†","am":"ط£ط±ظ…ظٹظ†ظٹط§","aw":"ط£ط±ظˆط¨ط§","er":"ط¥ط±ظٹطھط±ظٹط§","es":"ط£ط³ط¨ط§ظ†ظٹط§","au":"ط£ط³طھط±ط§ظ„ظٹط§","ee":"ط¥ط³طھظˆظ†ظٹط§","il":"ط¥ط³ط±ط§ط¦ظٹظ„","af":"ط£ظپط؛ط§ظ†ط³طھط§ظ†","ec":"ط¥ظƒظˆط§ط¯ظˆط±","ar":"ط§ظ„ط£ط±ط¬ظ†طھظٹظ†","jo":"ط§ظ„ط£ط±ط¯ظ†","ae":"ط§ظ„ط¥ظ…ط§ط±ط§طھ ط§ظ„ط¹ط±ط¨ظٹط© ط§ظ„ظ…طھط­ط¯ط©","al":"ط£ظ„ط¨ط§ظ†ظٹط§","bh":"ظ…ظ…ظ„ظƒط© ط§ظ„ط¨ط­ط±ظٹظ†","br":"ط§ظ„ط¨ط±ط§ط²ظٹظ„","pt":"ط§ظ„ط¨ط±طھط؛ط§ظ„","ba":"ط§ظ„ط¨ظˆط³ظ†ط© ظˆط§ظ„ظ‡ط±ط³ظƒ","ga":"ط§ظ„ط¬ط§ط¨ظˆظ†","dz":"ط§ظ„ط¬ط²ط§ط¦ط±","dk":"ط§ظ„ط¯ط§ظ†ظ…ط§ط±ظƒ","cv":"ط§ظ„ط±ط£ط³ ط§ظ„ط£ط®ط¶ط±","ps":"ظپظ„ط³ط·ظٹظ†","sv":"ط§ظ„ط³ظ„ظپط§ط¯ظˆط±","sn":"ط§ظ„ط³ظ†ط؛ط§ظ„","sd":"ط§ظ„ط³ظˆط¯ط§ظ†","se":"ط§ظ„ط³ظˆظٹط¯","so":"ط§ظ„طµظˆظ…ط§ظ„","cn":"ط§ظ„طµظٹظ†","iq":"ط§ظ„ط¹ط±ط§ظ‚","ph":"ط§ظ„ظپظ„ط¨ظٹظ†","cm":"ط§ظ„ظƒط§ظ…ظٹط±ظˆظ†","cg":"ط§ظ„ظƒظˆظ†ط؛ظˆ","cd":"ط¬ظ…ظ‡ظˆط±ظٹط© ط§ظ„ظƒظˆظ†ط؛ظˆ ط§ظ„ط¯ظٹظ…ظ‚ط±ط§ط·ظٹط©","de":"ط£ظ„ظ…ط§ظ†ظٹط§","hu":"ط§ظ„ظ…ط¬ط±","ma":"ط§ظ„ظ…ط؛ط±ط¨","mx":"ط§ظ„ظ…ظƒط³ظٹظƒ","sa":"ط§ظ„ظ…ظ…ظ„ظƒط© ط§ظ„ط¹ط±ط¨ظٹط© ط§ظ„ط³ط¹ظˆط¯ظٹط©","uk":"ط§ظ„ظ…ظ…ظ„ظƒط© ط§ظ„ظ…طھط­ط¯ط©","no":"ط§ظ„ظ†ط±ظˆظٹط¬","at":"ط§ظ„ظ†ظ…ط³ط§","ne":"ط§ظ„ظ†ظٹط¬ط±","in":"ط§ظ„ظ‡ظ†ط¯","us":"ط§ظ„ظˆظ„ط§ظٹط§طھ ط§ظ„ظ…طھط­ط¯ط©","jp":"ط§ظ„ظٹط§ط¨ط§ظ†","ye":"ط§ظ„ظٹظ…ظ†","gr":"ط§ظ„ظٹظˆظ†ط§ظ†","ag":"ط£ظ†طھظٹط؛ظˆط§ ظˆط¨ط±ط¨ظˆط¯ط§","id":"ط¥ظ†ط¯ظˆظ†ظٹط³ظٹط§","ao":"ط£ظ†ط؛ظˆظ„ط§","ai":"ط£ظ†ط؛ظˆظٹظ„ط§","uy":"ط£ظˆط±ظˆط¬ظˆط§ظٹ","uz":"ط£ظˆط²ط¨ظƒط³طھط§ظ†","ug":"ط£ظˆط؛ظ†ط¯ط§","ua":"ط£ظˆظƒط±ط§ظ†ظٹط§","ir":"ط¥ظٹط±ط§ظ†","ie":"ط£ظٹط±ظ„ظ†ط¯ط§","is":"ط£ظٹط³ظ„ظ†ط¯ط§","it":"ط¥ظٹط·ط§ظ„ظٹط§","pg":"ط¨ط§ط¨ظˆط§-ط؛ظٹظ†ظٹط§ ط§ظ„ط¬ط¯ظٹط¯ط©","py":"ط¨ط§ط±ط§ط¬ظˆط§ظٹ","bb":"ط¨ط§ط±ط¨ط§ط¯ظˆط³","pk":"ط¨ط§ظƒط³طھط§ظ†","pw":"ط¨ط§ظ„ط§ظˆ","bm":"ط¨ط±ظ…ظˆط¯ط§","bn":"ط¨ط±ظˆظ†ط§ظٹ","be":"ط¨ظ„ط¬ظٹظƒط§","bg":"ط¨ظ„ط؛ط§ط±ظٹط§","bd":"ط¨ظ†ط¬ظ„ط§ط¯ظٹط´","pa":"ط¨ظ†ظ…ط§","bj":"ط¨ظ†ظٹظ†","bt":"ط¨ظˆطھط§ظ†","bw":"ط¨ظˆطھط³ظˆط§ظ†ط§","pr":"ط¨ظˆط±طھظˆ ط±ظٹظƒظˆ","bf":"ط¨ظˆط±ظƒظٹظ†ط§ ظپط§ط³ظˆ","bi":"ط¨ظˆط±ظˆظ†ط¯ظٹ","pl":"ط¨ظˆظ„ظ†ط¯ط§","bo":"ط¨ظˆظ„ظٹظپظٹط§","pf":"ط¨ظˆظ„ظٹظ†ط²ظٹط§ ط§ظ„ظپط±ظ†ط³ظٹط©","pe":"ط¨ظٹط±ظˆ","by":"ط¨ظٹظ„ط§ط±ظˆط³","bz":"ط¨ظٹظ„ظٹط²","th":"طھط§ظٹظ„ط§ظ†ط¯","tw":"طھط§ظٹظˆط§ظ†","tm":"طھط±ظƒظ…ط§ظ†ط³طھط§ظ†","tr":"طھط±ظƒظٹط§","tt":"طھط±ظٹظ†ظٹط¯ط§ط¯ ظˆطھظˆط¨ط§ط¬ظˆ","td":"طھط´ط§ط¯","cl":"طھط´ظٹظ„ظٹ","tz":"طھظ†ط²ط§ظ†ظٹط§","tg":"طھظˆط¬ظˆ","tv":"طھظˆظپط§ظ„ظˆ","tk":"طھظˆظƒظٹظ„ط§ظˆ","to":"طھظˆظ†ط¬ط§","tn":"طھظˆظ†ط³","tp":"طھظٹظ…ظˆط± ط§ظ„ط´ط±ظ‚ظٹط©","jm":"ط¬ط§ظ…ط§ظٹظƒط§","gm":"ط¬ط§ظ…ط¨ظٹط§","gl":"ط¬ط±ظٹظ†ظ„ط§ظ†ط¯","pn":"ط¬ط²ط± ط§ظ„ط¨طھظƒط§ط±ظٹظ†","bs":"ط¬ط²ط± ط§ظ„ط¨ظ‡ط§ظ…ط§","km":"ط¬ط²ط± ط§ظ„ظ‚ظ…ط±","cf":"ط£ظپط±ظٹظ‚ظٹط§ ط§ظ„ظˆط³ط·ظ‰","cz":"ط¬ظ…ظ‡ظˆط±ظٹط© ط§ظ„طھط´ظٹظƒ","do":"ط¬ظ…ظ‡ظˆط±ظٹط© ط§ظ„ط¯ظˆظ…ظٹظ†ظٹظƒط§ظ†","za":"ط¬ظ†ظˆط¨ ط£ظپط±ظٹظ‚ظٹط§","gt":"ط¬ظˆط§طھظٹظ…ط§ظ„ط§","gp":"ط¬ظˆط§ط¯ظٹظ„ظˆط¨","gu":"ط¬ظˆط§ظ…","ge":"ط¬ظˆط±ط¬ظٹط§","gs":"ط¬ظˆط±ط¬ظٹط§ ط§ظ„ط¬ظ†ظˆط¨ظٹط©","gy":"ط¬ظٹط§ظ†ط§","gf":"ط¬ظٹط§ظ†ط§ ط§ظ„ظپط±ظ†ط³ظٹط©","dj":"ط¬ظٹط¨ظˆطھظٹ","je":"ط¬ظٹط±ط³ظٹ","gg":"ط¬ظٹط±ظ†ط²ظٹ","va":"ط¯ظˆظ„ط© ط§ظ„ظپط§طھظٹظƒط§ظ†","dm":"ط¯ظˆظ…ظٹظ†ظٹظƒط§","rw":"ط±ظˆط§ظ†ط¯ط§","ru":"ط±ظˆط³ظٹط§","ro":"ط±ظˆظ…ط§ظ†ظٹط§","re":"ط±ظٹظˆظ†ظٹظˆظ†","zm":"ط²ط§ظ…ط¨ظٹط§","zw":"ط²ظٹظ…ط¨ط§ط¨ظˆظٹ","ws":"ط³ط§ظ…ظˆط§","sm":"ط³ط§ظ† ظ…ط§ط±ظٹظ†ظˆ","sk":"ط³ظ„ظˆظپط§ظƒظٹط§","si":"ط³ظ„ظˆظپظٹظ†ظٹط§","sg":"ط³ظ†ط؛ط§ظپظˆط±ط©","sz":"ط³ظˆط§ط²ظٹظ„ط§ظ†ط¯","sy":"ط³ظˆط±ظٹط§","sr":"ط³ظˆط±ظٹظ†ط§ظ…","ch":"ط³ظˆظٹط³ط±ط§","sl":"ط³ظٹط±ط§ظ„ظٹظˆظ†","lk":"ط³ظٹط±ظٹظ„ط§ظ†ظƒط§","sc":"ط³ظٹط´ظ„","rs":"طµط±ط¨ظٹط§","tj":"ط·ط§ط¬ظٹظƒط³طھط§ظ†","om":"ط¹ظ…ط§ظ†","gh":"ط؛ط§ظ†ط§","gd":"ط؛ط±ظٹظ†ط§ط¯ط§","gn":"ط؛ظٹظ†ظٹط§","gq":"ط؛ظٹظ†ظٹط§ ط§ظ„ط§ط³طھظˆط§ط¦ظٹط©","gw":"ط؛ظٹظ†ظٹط§ ط¨ظٹط³ط§ظˆ","vu":"ظپط§ظ†ظˆط§طھظˆ","fr":"ظپط±ظ†ط³ط§","ve":"ظپظ†ط²ظˆظٹظ„ط§","fi":"ظپظ†ظ„ظ†ط¯ط§","vn":"ظپظٹطھظ†ط§ظ…","cy":"ظ‚ط¨ط±طµ","qa":"ظ‚ط·ط±","kg":"ظ‚ظٹط±ظ‚ظٹط²ط³طھط§ظ†","kz":"ظƒط§ط²ط§ط®ط³طھط§ظ†","nc":"ظƒط§ظ„ظٹط¯ظˆظ†ظٹط§ ط§ظ„ط¬ط¯ظٹط¯ط©","kh":"ظƒط§ظ…ط¨ظˆط¯ظٹط§","hr":"ظƒط±ظˆط§طھظٹط§","ca":"ظƒظ†ط¯ط§","cu":"ظƒظˆط¨ط§","ci":"ط³ط§ط­ظ„ ط§ظ„ط¹ط§ط¬","kr":"ظƒظˆط±ظٹط§","kp":"ظƒظˆط±ظٹط§ ط§ظ„ط´ظ…ط§ظ„ظٹط©","cr":"ظƒظˆط³طھط§ط±ظٹظƒط§","co":"ظƒظˆظ„ظˆظ…ط¨ظٹط§","ki":"ظƒظٹط±ظٹط¨ط§طھظٹ","ke":"ظƒظٹظ†ظٹط§","lv":"ظ„ط§طھظپظٹط§","la":"ظ„ط§ظˆط³","lb":"ظ„ط¨ظ†ط§ظ†","li":"ظ„ط´طھظ†ط´طھط§ظٹظ†","lu":"ظ„ظˆظƒط³ظ…ط¨ظˆط±ط¬","ly":"ظ„ظٹط¨ظٹط§","lr":"ظ„ظٹط¨ظٹط±ظٹط§","lt":"ظ„ظٹطھظˆط§ظ†ظٹط§","ls":"ظ„ظٹط³ظˆطھظˆ","mq":"ظ…ط§ط±طھظٹظ†ظٹظƒ","mo":"ظ…ط§ظƒط§ظˆ","fm":"ظ…ط§ظƒط±ظˆظ†ظٹط²ظٹط§","mw":"ظ…ط§ظ„ط§ظˆظٹ","mt":"ظ…ط§ظ„ط·ط§","ml":"ظ…ط§ظ„ظٹ","my":"ظ…ط§ظ„ظٹط²ظٹط§","yt":"ظ…ط§ظٹظˆطھ","mg":"ظ…ط¯ط؛ط´ظ‚ط±","eg":"ظ…طµط±","mk":"ظ…ظ‚ط¯ظˆظ†ظٹط§طŒ ظٹظˆط؛ظˆط³ظ„ط§ظپظٹط§","mn":"ظ…ظ†ط؛ظˆظ„ظٹط§","mr":"ظ…ظˆط±ظٹطھط§ظ†ظٹط§","mu":"ظ…ظˆط±ظٹط´ظٹظˆط³","mz":"ظ…ظˆط²ظ…ط¨ظٹظ‚","md":"ظ…ظˆظ„ط¯ظˆظپط§","mc":"ظ…ظˆظ†ط§ظƒظˆ","ms":"ظ…ظˆظ†طھط³ظٹط±ط§طھ","me":"ظ…ظˆظ†طھظٹظ†ظٹط؛ط±ظˆ","mm":"ظ…ظٹط§ظ†ظ…ط§ط±","na":"ظ†ط§ظ…ظٹط¨ظٹط§","nr":"ظ†ط§ظˆط±ظˆ","np":"ظ†ظٹط¨ط§ظ„","ng":"ظ†ظٹط¬ظٹط±ظٹط§","ni":"ظ†ظٹظƒط§ط±ط§ط¬ظˆط§","nu":"ظ†ظٹظˆط§","nz":"ظ†ظٹظˆط²ظٹظ„ظ†ط¯ط§","ht":"ظ‡ط§ظٹطھظٹ","hn":"ظ‡ظ†ط¯ظˆط±ط§ط³","nl":"ظ‡ظˆظ„ظ†ط¯ط§","hk":"ظ‡ظˆظ†ط؛ ظƒظˆظ†ط؛","wf":"ظˆط§ظ„ظٹط³ ظˆظپظˆطھظˆظ†ط§"};
